#!ipxe
###無雙 Project Gutenberg###
###任何事情做到極致，都是藝術。###
###The pursuit of perfection in any field ... is an art.###

console --picture https://github.com/hkkitlee/Ryanboot-offical-linux-netbooter/raw/main/logo.png --x 800 --y 600 || console --picture https://gitee.com/hkkitlee/Ryanboot-offical-linux-netbooter/raw/main/logo.png --x 800 --y 600
imgtrust --allow 

set mirror0 http://183.230.23.18:58000/ryanboot/

goto start

:start
menu			Ryanboot-offical-linux-netbooter

item	--gap	--	IP: ${ip}/${netmask} Mac Address:${mac}
item	--gap	--	DHCP:${dhcp-server} Gateway:${gateway} DNS:${dns}
item	--gap	--	next-server(proxy):${next-server}/${proxydhcp/next-server} SMBIOS UUID:${uuid}
item	--gap	--	Chip:${chip} Platform:${platform} Build Arch:${buildarch} Version:${version}
item	--gap	--	https://hkkitlee.ddns.net:9000/ https://github.com/hkkitlee/Ryanboot
item	--gap	--	Chainload:http://hkkitlee.ddns.net:8999/chain.ipxe
item	--gap	--	https://git[hub,ee].com/hkkitlee/Ryanboot-offical-linux-netbooter
item	--gap  

item	--gap	--	Ryanboot-offical-linux-netbooter
item	--key a installer		(A) List Installer
item	--key b live			(B) List Live
item	--key c	based			(C) List by Based on

item	--gap  
item	--key d memtest86		(D) Memtest86
item	--key e supergrub2		(E) SuperGrub2 Disk
item	--gap
item	--gap	--	Config
item		background		Background config
item		colour			cpair config
item		setting			iPXE config
item	--gap
item		poweroff		PowerOff
item		reboot			Reboot
item	--gap
item	--gap	--	Chainload to boot from...
item		ryanboot		Ryanboot
item		rpbl			Ryanboot-P2PBitTorrent-Boot-Linux
item		cl			https://gitee.com/xxx
item		xyz			netboot.xyz


choose --default installer target && cpair 0 && goto ${target}

:installer
menu		Ryanboot-offical-linux-netbooter (List Installer)

item	--gap	--	Auto select amd64/i[3,6]86. Release/Version Selection. 
item	--gap	--	tui/gtk Text/Graphical User Interface. SF for hosting by SourceForge.
item	--key a	Ubuntu			(A) Ubuntu amd64/i386
item	--key b	Fedora			(B) Fedora (Everything, Server, Silverblue) amd64
item	--key c	Debian			(C) Debian amd64/i386
item	--key d	Parrot			(D) Parrot-Linux amd64/i386
item	--key e	Kali			(E) Kali-Linux amd64/i386 
item	--key f	openSUSE		(F) openSUSE amd64/i386
item	--key g	IPFire			(G) IPFire amd64/i586
item	--key h	Mageia			(H) Mageia amd64/i586
item	--key i	Devuan			(I) Devuan amd64/i386
item	--key j	Alma			(J) AlmaLinux amd64
item	--key k	coreosinstall		(K) Fedora CoreOS amd64
item	--key l	SmeOS			(L) Koozali SME Server amd64
item	--key m	openEuler		(M) openEuler amd64
item	--key n	CentosStream		(N) Centos Stream amd64
item	--key o	CloudLinuxOS		(O) CloudLinux OS amd64
item	--key p	Absolute		(P) Absolute-Linux amd64
item	--key q	PureOS			(Q) PureOS Linux amd64
item	--key r	Springdale		(R) Springdale Linux amd64
item	--key s	ClearOS			(S) ClearOS Linux amd64
item	--key t	steamos			(T) SteamOS Linux amd64
item	--key u	clearlinux		(U) Clear Linux OS amd64 SF
item	--key v	proxmoxve		(V) Proxmox VE OS amd64 SF
item	--key w	oracle8			(W) OracleLinux R8 Full amd64 SF
item	--key x	rocky			(X) RockyLinux 8 amd64

item	--gap
item		start			Back to Top
choose --default ubuntu target && cpair 0 && goto ${target}


:live
menu		Ryanboot-offical-linux-netbooter (List Live)

item	--gap	--	Auto select amd64/i[3,6]86. Release/Version Selection. 
item	--gap	--	tui/gtk Text/Graphical User Interface. SF for hosting by SourceForge.
item	--key a	Arch			(A) Arch Linux amd64 Live with Option Installer Script
item	--key b	Tinycore		(B) Tinycore amd64/i386
item	--key c	Alpine			(C) Alpine amd64/i386
item	--key d	Slitaz			(D) SliTaz rolling amd64/i386 (Support by teasiu@bbs.wuyou.net)
item	--key e	Slax			(E) Slax amd64/i386
item	--key f	Slackware		(F) Slackware amd64/i386 with Installer
item	--key g	Rancheros		(G) Rancher OS amd64/i386
item	--key h	X-wrt			(H) X-wrt amd64/i386
item	--key i	containerlinux		(I) Container Linux by flatcar amd64
item	--key j	coreoslive		(J) Fedora CoreOS amd64
item	--key k	Fatdog			(K) Fatdog64 Linux amd64
item	--key l	onefilelinux		(L) OneFileLinux
item	--key m	blackarch		(M) BlackArch Linux amd64 Live with Installer Script SF
item	--key n garuda-wayfire		(N) Garuda Linux Wayfire amd64 Live with Installer SF
item	--key o manjaro-xfce		(O) Manjaro Linux Xfce amd64 Live with Installer SF
item	--key p gentoo-minimal		(P) Gentoo Linux Minimal amd64 SF
item	--key q gparted-live		(Q) Gparted-Live amd64 SF
item	--key r clonezilla		(R) Clonezilla Live/Lite Server amd64 SF
item	--key s	redorescue		(S) Redo-Rescue amd64 SF
item	--key t	partmagic		(T) Parted Magic amd64 SF

item	--gap
item		start			Back to Top
choose --default arch target && cpair 0 && goto ${target}


:based
menu            Ryanboot-offical-linux-netbooter (List by Based on)

item    --gap   --      Auto select amd64/i[3,6]86. Release/Version Selection.
item    --gap   --      tui/gtk Text/Graphical User Interface. SF for hosting by SourceForge.
item    --gap

item	--gap RedHat
item    rocky                   RockyLinux 8 installer amd64
item    oracle8                 OracleLinux R8 Full installer amd64 SF
item    CentosStream            Centos Stream installer amd64
item    Fedora	                Fedora installer (Everything, Server, Silverblue) amd64
item    coreosinstall           Fedora CoreOS installer amd64
item    coreoslive              Fedora CoreOS live amd64
item    Alma                    AlmaLinux installer amd64
item    Springdale              Springdale Linux installer amd64
item    SmeOS                   Koozali SME Server installer amd64
item    ClearOS                 ClearOS Linux installer amd64
item    CloudLinuxOS            CloudLinux OS installer amd64
item    openEuler               openEuler installer amd64
item    --gap

item	--gap Debian
item    Debian                  Debian installer amd64/i386
item    Ubuntu                  Ubuntu installer amd64/i386
item    Kali                    Kali-Linux installer amd64/i386
item    Parrot                  Parrot-Linux installer amd64/i386
item    proxmoxve               Proxmox VE OS installer amd64 SF
item    Slax                    Slax live amd64/i386
item    Devuan                  Devuan installer amd64/i386
item    PureOS                  PureOS Linux installer amd64
item    steamos                 SteamOS Linux installer amd64
item    gparted-live            Gparted-Live live amd64 SF
item    clonezilla              Clonezilla Live/Lite Server live amd64 SF
item    redorescue              Redo-Rescue live amd64 SF
item    partmagic               Parted Magic live amd64 SF
item    --gap

item	--gap Arch
item    Arch                    Arch Linux live amd64 with Option Installer Script
item    manjaro-xfce            Manjaro Linux Xfce live amd64 with Installer SF
item    blackarch               BlackArch Linux live amd64 with Installer Script SF
item    garuda-wayfire          Garuda Linux Wayfire live amd64 with Installer SF
item    --gap

item	--gap Gentoo
item    gentoo-minimal          Gentoo Linux Minimal live amd64 SF
item    containerlinux          Container Linux by flatcar live amd64
item    --gap

item	--gap openSUSE
item    openSUSE                openSUSE installer amd64/i386
item    --gap

item	--gap Slackware
item    Slackware               Slackware live amd64/i386 with Installer
item    Absolute                Absolute-Linux installer amd64
item    --gap

item	--gap Busybox
item    Tinycore                Tinycore live amd64/i386
item    Slitaz                  SliTaz rolling live amd64/i386 (Support by teasiu@bbs.wuyou.net)
item    Alpine                  Alpine live amd64/i386
item    X-wrt                   X-wrt live amd64/i386
item    --gap

item	--gap Mandriva
item    Mageia                  Mageia installer amd64/i586
item    --gap

item    --gap Puppy
item    Fatdog                  Fatdog64 Linux live amd64
item    --gap

item	--gap Others
item    IPFire                  IPFire installer amd64/i586
item    Rancheros               Rancher OS live amd64/i386
item    clearlinux              Clear Linux OS installer amd64 SF
item    onefilelinux            OneFileLinux live
item    --gap

item            start                   Back to Top
choose --default rocky target && cpair 0 && goto ${target}


:failed
start

:poweroff
poweroff

:reboot
reboot

:rpbl
chain https://github.com/hkkitlee/Ryanboot-P2PBitTorrent-Boot-Linux/raw/master/RPBL.ipxe || chain https://gitee.com/hkkitlee/Ryanboot-P2PBitTorrent-Boot-Linux/raw/master/RPBL.ipxe

#################################################
:Ubuntu

set ds1 http://archive.ubuntu.com
set ds2 http://mirrors.layeronline.com
set ds3 http://mirrors.aliyun.com
set ds4 http://mirrors.tuna.tsinghua.edu.cn

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Ubuntu_manual
echo Mirror List: https://launchpad.net/ubuntu/+archivemirrors
echo
set ds http://mirrors.tuna.tsinghua.edu.cn
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Ubuntu_stage2
echo Ubuntu 18.04.5 LTS (Bionic Beaver)
echo Ubuntu 20.04.2 LTS (Focal Fossa)
echo Ubuntu 20.10 (Groovy Gorilla)
echo Ubuntu 21.04 (Hirsute Hippo)
echo
set version focal
echo -n Ubuntu installer Version (bionic, focal, groovy, hirsute): ${}
read version

echo Ubuntu only provide i386 netinstaller for Groovy & Hirsute.
echo No amd64 is available.

echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

iseq ${version} focal && set link legacy- ||
cpuid --ext 29 && set arch amd64 || set arch i386

#reset arch to i386 for netinstaller in Groovy / Hirsute.
iseq ${version} groovy && set arch i386 || 
iseq ${version} hirsute && set arch i386 ||

kernel ${ds}/ubuntu/dists/${version}/main/installer-${arch}/current/${link}images/netboot/ubuntu-installer/${arch}/linux initrd=initrd.gz ${kp}
initrd ${ds}/ubuntu/dists/${version}/main/installer-${arch}/current/${link}images/netboot/ubuntu-installer/${arch}/initrd.gz

boot
#################################################
:Fedora

set ds1 http://ftp.cuhk.edu.hk/pub/linux
set ds2 http://mirrors.tuna.tsinghua.edu.cn
set ds3 http://ftp-srv2.kddilabs.jp/Linux/packages
set ds4 http://ftp.riken.jp/Linux

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Fedora_manual
echo Mirror List: https://mirrors.fedoraproject.org
set ds http://mirrors.tuna.tsinghua.edu.cn
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Fedora_stage2
set version 34
echo -n Fedora installer Version (32-34): ${}
read version
echo

set release Everything
echo -n Release (Everything, Server, Silverblue): ${}
read release
echo

set kp ro ip=dhcp inst.gpt
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

set path ${ds}/fedora/releases/${version}/${release}/x86_64/os
initrd ${path}/images/pxeboot/initrd.img
kernel ${path}/images/pxeboot/vmlinuz initrd=initrd.img inst.stage2=${path} ${kp}
boot
#################################################
:Debian

set ds1 http://ftp.hk.debian.org
set ds2 http://ftp2.cn.debian.org
set ds3 http://ftp.cn.debian.org
set ds4 http://ftp.kr.debian.org
set ds5 http://ftp.ca.debian.org
set ds6 https://mirrors.tuna.tsinghua.edu.cn

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item 5 ${ds5}
item 6 ${ds6}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Debian_manual
echo Mirror List: https://www.debian.org/mirror/list
echo
set ds https://mirrors.tuna.tsinghua.edu.cn
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Debian_stage2
set version buster
echo -n Debian installer Version (bullseye, buster, jessie): ${}
read version
echo

set interface gtk
echo -n Debian installer interface (tui, gtk): ${}
read interface
echo


echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

iseq ${interface} gtk && set link gtk/ || set link
cpuid --ext 29 && set arch amd64 || set arch i386


initrd ${ds}/debian/dists/${version}/main/installer-${arch}/current/images/netboot/${link}debian-installer/${arch}/initrd.gz
kernel ${ds}/debian/dists/${version}/main/installer-${arch}/current/images/netboot/${link}debian-installer/${arch}/linux initrd=initrd.gz ${kp}

boot
#################################################
:Parrot

set ds1 http://dk.archive.ubuntu.com
set ds2 http://mirrors.mit.edu
set ds3 http://ftp.th.debian.org
set ds4 http://mirror.kku.ac.th
set ds5 http://mirrors.ustc.edu.cn/
set ds6 https://mirrors.sjtug.sjtu.edu.cn
set ds7 https://mirrors.tuna.tsinghua.edu.cn

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item 5 ${ds5}
item 6 ${ds6}
item 7 ${ds7}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:Parrot_manual
echo Mirror List: https://docs.parrotlinux.org/mirror-list/
echo
set ds https://mirrors.tuna.tsinghua.edu.cn
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2


:Parrot_stage2
set release rolling
echo -n Release (rolling, parrot, stable): ${}
read release
echo

set version current
echo -n Version: ${}
read version
echo

set interface gtk
echo -n Parrot installer interface (tui, gtk): ${}
read interface
echo

set kp auto
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

iseq ${interface} gtk && set link gtk/ || set link
cpuid --ext 29 && set arch amd64 || set arch i386


kernel ${ds}/parrot/dists/${release}/main/installer-${arch}/${version}/images/netboot/${link}debian-installer/${arch}/linux initrd=initrd.gz ${kp}
initrd ${ds}/parrot/dists/${release}/main/installer-${arch}/${version}/images/netboot/${link}debian-installer/${arch}/initrd.gz

boot
#################################################
:Kali

set ds1 https://http.kali.org
set ds2 http://kali.download
set ds3 http://ftp.jaist.ac.jp/pub/Linux
set ds4 http://mirror.serverius.net
set ds5 http://mirror1.ku.ac.th
set ds6 http://kali.cs.nctu.edu.tw
set ds7 https://mirrors.tuna.tsinghua.edu.cn

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item 5 ${ds5}
item 6 ${ds6}
item 7 ${ds7}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:Kali_manual
echo Mirror List: http://http.kali.org/README.mirrorlist
echo
set ds https://mirrors.tuna.tsinghua.edu.cn
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Kali_stage2
set release rolling
echo -n Release (rolling, dev, last-snapshot): ${}
read release
echo

set version current
echo -n Version: ${}
read version
echo

set interface gtk
echo -n Kali installer interface (tui, gtk): ${}
read interface
echo

set kp auto
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

iseq ${interface} gtk && set link gtk/ || set link
cpuid --ext 29 && set arch amd64 || set arch i386


kernel ${ds}/kali/dists/kali-${release}/main/installer-${arch}/${version}/images/netboot/${link}debian-installer/${arch}/linux initrd=initrd.gz ${kp}
initrd ${ds}/kali/dists/kali-${release}/main/installer-${arch}/${version}/images/netboot/${link}debian-installer/${arch}/initrd.gz
boot
#################################################
:Arch

set ds1 http://mirrors.evowise.com
set ds2 http://hkg.mirror.rackspace.com
set ds3 http://mirrors.cat.net
set ds4 http://mirror.cedille.club
set ds5 https://mirrors.tuna.tsinghua.edu.cn

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item 5 ${ds5}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:Arch_manual
echo Mirror List: https://archlinux.org/mirrorlist/
echo
set ds https://mirrors.tuna.tsinghua.edu.cn
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Arch_stage2
echo Option Installation Script:
echo http://hkkitlee.ddns.net:8999/arch-installer.sh 
set is http://hkkitlee.ddns.net:8999/arch-installer.sh
echo -n Select installation script: ${}
read is
echo

set kp ip=dhcp archiso_http_srv=${ds}/archlinux/iso/latest/
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo


kernel ${ds}/archlinux/iso/latest/arch/boot/x86_64/vmlinuz-linux vmlinuz-linux initrd=amd-ucode.img initrd=intel-ucode.img initrd=initramfs-linux.img ${kp} script=${is}
initrd ${ds}/archlinux/iso/latest/arch/boot/x86_64/initramfs-linux.img
initrd ${ds}/archlinux/iso/latest/arch/boot/amd-ucode.img
initrd ${ds}/archlinux/iso/latest/arch/boot/intel-ucode.img
boot
#################################################
:Tinycore

set ds1 http://tinycorelinux.net
set ds2 http://mirrors.163.com/tinycorelinux
set ds3 http://mirror.cpsc.ucalgary.ca/mirror/tinycorelinux
set ds4 https://mirrors.tuna.tsinghua.edu.cn/tinycorelinux

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Tinycore_manual
echo Mirror List: https://www.linuxsecrets.com/tinycorelinux-wiki/wiki:mirrors.html
echo
set ds https://mirrors.tuna.tsinghua.edu.cn/tinycorelinux
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Tinycore_stage2
set version 12
echo -n 2-12  version: ${}
read version
echo

set kp loglevel=3 vga=791 base norestore 
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

cpuid --ext 29 && set arch x86_64 || set arch x86
cpuid --ext 29 && set file1 64 ||


kernel ${ds}/${version}.x/${arch}/release/distribution_files/vmlinuz${file1} initrd=modules${file1}.gz initrd=rootfs${file1}.gz ${kp} 
initrd ${ds}/${version}.x/${arch}/release/distribution_files/modules${file1}.gz
initrd ${ds}/${version}.x/${arch}/release/distribution_files/rootfs${file1}.gz


boot
#################################################
:Alpine
set ds1 http://mirrors.tuna.tsinghua.edu.cn/alpine/
set ds2 http://mirrors.ustc.edu.cn/alpine/
set ds3 http://mirror.xtom.com.hk/alpine/
set ds4 http://mirror.csclub.uwaterloo.ca/alpine/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Alpine_manual
echo Mirror List: https://mirrors.alpinelinux.org/
echo
set ds http://mirrors.tuna.tsinghua.edu.cn/alpine/
echo -n Manual Entry ${target} URL: ${}
read ds                                                                         
echo
goto ${target}_stage2

:Alpine_stage2
set version 3.14 
echo -n Version: 3.0-3.14  version: ${}                                                      
read version                                                                    
echo

clear start_sshd
echo -n Enter url to ssh key:${}
read ssh_key
isset ${ssh_key} && set start_sshd yes || set start_sshd no
iseq ${start_sshd} yes && set ssh_key ssh_key=${ssh_key} || clear ssh_key

set flavor lts
echo -n Options: lts, virt: ${}                                                          
read flavor                                                                     
echo

cpuid --ext 29 && set arch x86_64 || set arch x86
iseq ${arch} x86_64 && set console ttyS1,115200n8 ||

set kp modules=loop,squashfs quiet nomodeset alpine_repo=${ds}v${version}/main modloop=${ds}/${version}/releases/${arch}/netboot/modloop-${flavor} ${ssh_key} ${console}
echo -n Kernel Parameter, Bootcode: ${}                                         
read kp                                                                         
echo 



kernel ${ds}/v${version}/releases/${arch}/netboot/vmlinuz-${flavor} initrd=initramfs-${flavor} ${kp}
initrd ${ds}/v${version}/releases/${arch}/netboot/initramfs-${flavor}

boot
#################################################
:Slitaz

menu ${target} Version
item    --key a offical_Slitaz			(A) Offical Slitaz
item    --key b teasiu_Slitaz			(B) Teasiu Slitaz
choose target_Slitaz && goto ${target_Slitaz}


:offical_Slitaz
set ds1 ${mirror0}slitaz/
set ds2 https://master.dl.sourceforge.net/project/ryanboot/slitaz/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto offical_${target}_manual || set ds ${ds${siteno}} && goto offical_${target}_stage2

:offical_Slitaz_manual
set ds ${mirror0}slitaz/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto offical_${target}_stage2

:offical_Slitaz_stage2
iseq ${ds} https://master.dl.sourceforge.net/project/ryanboot/slitaz/ && set link ?viasf=1 ||

set bit 64
echo -n Kernel [32 / 64]: ${}                                                         
read bit                                                                              
echo
iseq ${bit} 64 && set bit 64 || set bit  

set kp root=/dev/null nomodeset laptop video=-32 autologin
echo -n Kernel Parameter, Bootcode: ${}                                               
read kp                                                                               
echo

kernel --name bzImage${bit} --timeout 100000 ${ds}boot/bzImage${bit}${link} initrd=rootfs1.gz${bit} initrd=rootfs2.gz initrd=rootfs3.gz initrd=rootfs4.gz initrd=rootfs5.gz ${kp}
initrd --name rootfs1.gz${bit} --timeout 100000 ${ds}boot/rootfs1.gz${bit}${link}
initrd --name rootfs2.gz --timeout 100000 ${ds}boot/rootfs2.gz${link}
initrd --name rootfs3.gz --timeout 100000 ${ds}boot/rootfs3.gz${link}
initrd --name rootfs4.gz --timeout 100000 ${ds}boot/rootfs4.gz${link}
initrd --name rootfs5.gz --timeout 100000 ${ds}boot/rootfs5.gz${link}
boot


:teasiu_Slitaz

set ds1 http://ecoo.top:8083/dl/slitaz/
set ds2 http://www.slitaz.cn:8083/dl/slitaz/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto teasiu_${target}_manual || set ds ${ds${siteno}} && goto teasiu_${target}_stage2

:teasiu_Slitaz_manual
set ds http://www.slitaz.cn:8083/dl/slitaz/
echo -n Manual Entry ${target} URL: ${}
read ds                                                                         
echo
goto teasiu_Slitaz_stage2

:teasiu_Slitaz_stage2
set bit 64                                                                           
echo -n Kernel [32 / 64]: ${}                                                                           
read bit                                                                                                           
echo
iseq ${bit} 64 && set path 64 || set path 32
iseq ${bit} 64 && set kernel bzImage64 || set kernel bzImage

set kp rw root=/dev/null lang=zh_CN kmap=us autologin modprobe=nvidia nomodeset laptop
echo -n Kernel Parameter, Bootcode: ${}                                                                           
read kp                                                                                                           
echo 

kernel ${ds}/iso/rolling/boot${path}/${kernel} initrd=rootfs.gz ${kp}
initrd ${ds}/iso/rolling/boot${path}/rootfs.gz
boot
#################################################
:openSUSE
set ds1 http://mirrors.tuna.tsinghua.edu.cn/opensuse/
set ds2 https://mirror.bjtu.edu.cn/opensuse/
set ds3 http://mirrors.ustc.edu.cn/opensuse/
set ds4 http://download.opensuse.org/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2



:openSUSE_manual
echo Mirror List: https://mirrors.opensuse.org/
echo
set ds http://mirrors.tuna.tsinghua.edu.cn/opensuse/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:openSUSE_stage2
set release tumbleweed
echo -n Release (tumbleweed, stable, current, leap): ${}
read release
echo
iseq ${release} tumbleweed && set release tumbleweed ||
iseq ${release} stable && set release distribution/openSUSE-stable ||
iseq ${release} current && set release distribution/openSUSE-current ||
iseq ${release} leap && set version 15.3 && echo -n Version (15.0 - 15.3): ${} && read version && set release distribution/leap/${version} ||
echo

cpuid --ext 29 && set bit x86_64 || set bit i386

set kp root=/dev/ram0 load_ramdisk=1 splash=silent vga=0x314 showopts install=${ds}${release}/repo/oss/
echo -n Kernel Parameter, Bootcode: ${}                                                                           
read kp                                                                                                           
echo

kernel ${ds}${release}/repo/oss/boot/${bit}/loader/linux initrd=initrd ${kp}
initrd ${ds}${release}/repo/oss/boot/${bit}/loader/initrd
boot
#################################################
:Slax

set ds1 http://ftp.sh.cvut.cz
set ds2 http://ftp.linux.cz/pub/linux

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Slax_manual
set ds http://ftp.sh.cvut.cz
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Slax_stage2
echo Slax Server is slow 
echo
set mainv 9
echo -n Main Version : ${}                                                                                   
read mainv                                                                                                       

set subv 11.0
echo -n Sub Version : ${}                                                                                        
read subv                                                                                                        
echo

set kp vga=normal load_ramdisk=1 prompt_ramdisk=0 rw printk.time=0 consoleblank=0 nocd nohd
echo -n Kernel Parameter, Bootcode: ${}                                                                           
read kp                                                                                                           
echo 

cpuid --ext 29 && set bit 64 || set bit 32
kernel ${ds}/slax/Slax-${mainv}.x/ipxe/${mainv}.${subv}/${bit}bit/vmlinuz initrd=initrfs.img slax.flags=toram ${kp} from=${ds}/slax/Slax-${mainv}.x/slax-${bit}bit-${mainv}.${subv}.iso
initrd ${ds}/slax/Slax-${mainv}.x/ipxe/${mainv}.${subv}/${bit}bit/initrfs.img 
boot
#################################################
:IPFire

set ds1 https://downloads.ipfire.org/
set ds2 http://ftp.fau.de/ipfire/
set ds3 http://mirror.csclub.uwaterloo.ca/ipfire/
set ds4 http://ftp.yz.yamagata-u.ac.jp/pub/network/security/ipfire/
set ds5 http://mirror.aarnet.edu.au/pub/ipfire/
set ds6 http://hammurabi.acc.umu.se/mirror/ipfire.org/
set ds7 http://cdimage.debian.org/mirror/ipfire.org/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item 5 ${ds5}
item 6 ${ds6}
item 7 ${ds7}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:IPFire_manual
echo Mirror List: https://mirrors.ipfire.org/
echo
set ds http://ftp.yz.yamagata-u.ac.jp/pub/network/security/ipfire/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:IPFire_stage2
set mainv ipfire-2.x
echo -n Main Version: ${}
read mainv
echo

set subv 2.25-core157
echo -n Sub Version: ${}
read subv
echo

cpuid --ext 29 && set bit x86_64 || set bit i586

set kp vga=791
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel ${ds}/releases/${mainv}/${subv}/images/${bit}/vmlinuz initrd=instroot ${kp}
initrd ${ds}/releases/${mainv}/${subv}/images/${bit}/instroot
boot
#################################################
:Slackware

set ds1 http://ftp.linux.cz/pub/linux/slackware/
set ds2 http://ftp.nara.wide.ad.jp/pub/Linux/slackware/
set ds3 https://mirror.csclub.uwaterloo.ca/slackware/
set ds4 https://mirror.its.dal.ca/slackware/
set ds5 https://hkg.mirror.rackspace.com/slackware/
set ds6 https://mirror-hk.koddos.net/slackware/
set ds7 https://mirrors.bfsu.edu.cn/slackware/
set ds8 https://mirrors.tuna.tsinghua.edu.cn/slackware/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item 5 ${ds5}
item 6 ${ds6}
item 7 ${ds7}
item 8 ${ds8}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Slackware_manual
echo Mirror List: https://mirrors.slackware.com/mirrorlist/
echo
set ds https://mirrors.tuna.tsinghua.edu.cn/slackware/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Slackware_stage2
set version current
echo -n 13.0 - current Version: ${}
read version
echo

set huge huge.s
echo Symmetrical Multi-Processing, No need to set on x86-64
echo Only need on very old Generic Kernel (i386)
echo -n hugesmp.s/huge.s: ${}
read huge
echo

cpuid --ext 29 && set bit slackware64 || set bit slackware

set kp load_ramdisk=1 prompt_ramdisk=0 rw printk.time=0 SLACK_KERNEL=${huge}
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

cpuid --ext 29 && set huge huge.s || echo -n Generic Kernels keeps ${huge}

kernel ${ds}/${bit}-${version}/kernels/${huge}/bzImage initrd=initrd.img ${kp}
initrd ${ds}/${bit}-${version}/isolinux/initrd.img
boot
#################################################
:Rancheros

set ds1 http://releases.rancher.com/os/latest

menu Sites boot ${target} from:
item 1 ${ds1}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:Rancheros_manual
echo Howto: https://www.vultr.com/docs/install-rancher-os-via-ipxe
echo
set ds http://releases.rancher.com/os/latest
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Rancheros_stage2
set passwd temppasswd
echo -n Temporary password: ${}
read passwd
echo

set kp rancher.state.dev=LABEL=RANCHER_STATE rancher.password=${passwd} rancher.cloud_init.datasources=[url:http://example.com/cloud-config] rancher.autologin=tty1
echo -n Kernel Parameter, Bootcode: ${}                                                                           
read kp                                                                                                           
echo  

kernel ${ds}/vmlinuz initrd=initrd ${kp}
initrd ${ds}/initrd
boot
#################################################
:X-wrt

set ds1 https://downloads.x-wrt.com/rom/

menu Sites boot ${target} from:
item 1 ${ds1}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:X-wrt_manual
set ds https://downloads.x-wrt.com/rom/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:X-wrt_stage2
echo Source: https://downloads.x-wrt.com/rom/
echo Howto: https://blog.x-wrt.com/docs/install-on-vps2/
echo

set kname x-wrt-9.0-b202106212213-x86-64-generic-initramfs-kernel.bin
echo -n Kernel name: ${}
read kname
echo

echo SSID:X-WRT_XXXX Wifi passwd:88888888
echo Web index:http://192.168.15.1/
echo Username/Passwd:root/admin

kernel ${ds}${kname}
boot
#################################################
:Devuan


set ds1 https://pkgmaster.devuan.org/devuan

menu Sites boot ${target} from:
item 1 ${ds1}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Devuan_manual
set ds https://pkgmaster.devuan.org/devuan
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Devuan_stage2
set releases beowulf
echo -n Releases (jessie,beowulf): ${}
read releases
echo

set version current
echo -n Version: ${}
read version
echo

set interface gtk
echo -n Devuan installer interface (tui, gtk): ${}
read interface
echo

iseq ${interface} gtk && set link gtk/ || set link

cpuid --ext 29 && set bit amd64 || set bit i386

set kp vga=788
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo
kernel ${ds}/dists/${releases}/main/installer-${bit}/${version}/images/netboot/${link}debian-installer/${bit}/linux initrd=initrd.gz ${kp}
initrd ${ds}/dists/${releases}/main/installer-${bit}/${version}/images/netboot/${link}debian-installer/${bit}/initrd.gz
boot
#################################################
:Mageia

set ds1 https://free.nchc.org.tw/mageia/
set ds2 https://mirrors.tuna.tsinghua.edu.cn/mageia/
set ds3 https://mirrors.ustc.edu.cn/mageia/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:Mageia_manual
echo Mirror List: https://mirrors.mageia.org/
echo
set ds https://mirrors.ustc.edu.cn/mageia/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Mageia_stage2
set version 8
echo -n 6 - 8 Version: ${}
read version
echo

set ramdisk all.rdz
echo -n Driver: all.rdz / all-nonfree.rdz: ${}
read ramdisk
echo

cpuid --ext 29 && set bit x86_64 || set bit i586
cpuid --ext 29 && set path x86_64 || set path i386

set kp vga=788
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel ${ds}distrib/${version}/${bit}/isolinux/${path}/vmlinuz initrd=${ramdisk} ${kp}
initrd ${ds}distrib/${version}/${bit}/isolinux/${path}/${ramdisk}
boot
#################################################
:Alma
set ds1 https://repo.almalinux.org/almalinux/
set ds2 http://mirror.epn.edu.ec/almalinux/ 
set ds3 http://mirror.fem-net.de/almalinux/
set ds4 http://mirror.hahosting.com/almalinux/
set ds5 http://almalinux.japan.crexio.com/almalinux/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item 5 ${ds5}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Alma_manual
echo Mirror List: https://mirrors.almalinux.org/
echo
set ds http://almalinux.japan.crexio.com/almalinux/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Alma_stage2
set version 8
echo -n Version: ${}
read version
echo

set kp inst.gpt ro
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

cpuid --ext 29 && set bit x86_64 ||

kernel ${ds}${version}/BaseOS/${bit}/os/images/pxeboot/vmlinuz initrd=initrd.img ${kp} inst.repo=${ds}${version}/BaseOS/${bit}/os
initrd ${ds}${version}/BaseOS/${bit}/os/images/pxeboot/initrd.img
boot
#################################################
:Containerlinux

set channel stable
echo -n Channel(stable, beta, alpha, edge): ${}
read channel
echo

set ds1 http://${channel}.release.flatcar-linux.net/amd64-usr/current

menu Sites boot ${target} from:
item 1 ${ds1}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Containerlinux_manual
set ds http://${channel}.release.flatcar-linux.net/amd64-usr/current
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Containerlinux_stage2
set kp
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel ${ds}/flatcar_production_pxe.vmlinuz initrd=flatcar_production_pxe_image.cpio.gz ${kp}
initrd ${ds}/flatcar_production_pxe_image.cpio.gz

boot
#################################################
:coreosinstall
set device /dev/vda
echo -n Device Selection: ${}
read device
echo
echo CAUTION!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
echo CAUTION!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
echo CAUTION!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
echo The DEVICE that you entered will be formatted without ANYMORE prompt
echo -n Are you SURE!!!? ( Y / n ):${}
read answer
echo
iseq ${answer} Y && goto coreos || goto start
###
:coreoslive
goto coreos
###
:coreos

set ds1 https://builds.coreos.fedoraproject.org/prod

menu Sites boot Fedora CoreOS from:
item 1 ${ds1}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto coreos_manual || set ds ${ds${siteno}} && goto coreos_stage2

:coreos_manual
set ds https://builds.coreos.fedoraproject.org/prod
echo -n Manual Entry Fodora CoreOS URL: ${}
read ds
echo
goto coreos_stage2

:coreos_stage2
set stream stable
echo -n Stream(stable, testing, next): ${}
read stream
echo

echo https://getfedora.org/en/coreos/
iseq ${stream} stable && set version 33.20210301.3.1 ||
iseq ${stream} testing && set version 33.20210314.2.0 ||
iseq ${stream} next && set version 33.20210315.1.0 ||
echo -n Version: ${}
read version
echo

echo Producing an Ignition File:
echo https://docs.fedoraproject.org/en-US/fedora-coreos/producing-ign/
clear loadconf
set configurl https://example.com/config.ign
echo -n Configurl: ${}
read configurl
isset ${configurl} && set loadconf yes || set loadconf no
iseq ${loadconf} yes && set configurl ignition.config.url=${configurl} || clear configurl
echo

set path /streams/${stream}/builds/${version}/x86_64

iseq ${target} coreosinstall && set kp coreos.inst.install_dev=${device} coreos.inst.stream=${stream} ${configurl} ||
iseq ${target} coreoslive && set kp ip=dhcp rd.neednet=1 ignition.firstboot ignition.platform.id=metal systemd.unified_cgroup_hierarchy=0 ${configurl} ||
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel ${ds}${path}/fedora-coreos-${version}-live-kernel-x86_64 initrd=fedora-coreos-${version}-live-initramfs.x86_64.img coreos.live.rootfs_url=${ds}${path}/fedora-coreos-${version}-live-rootfs.x86_64.img ${kp}
initrd ${ds}${path}/fedora-coreos-${version}-live-initramfs.x86_64.img
boot
#################################################
:Fatdog
set ds1 http://distro.ibiblio.org/fatdog

menu Sites boot ${target} from:
item 1 ${ds1}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Fatdog_manual
set ds http://distro.ibiblio.org/fatdog
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Fatdog_stage2
set release 810
echo -n Release: ${}
read release
echo

set kversion 5.4.7
echo -n Kernel Version: ${}
read kversion
echo

set kp
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel ${ds}/kernels/${release}/vmlinuz-initrd-${kversion} ${kp}
boot
#################################################
:SmeOS

set ds1 http://mirror.canada.pialasse.com/releases/
set ds2 http://distro.ibiblio.org/pub/linux/distributions/smeserver/releases/
set ds3 http://mirrors.misouk.com/smeserver/releases/
set ds4 http://mirror.internode.on.net/pub/smeserver/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:SmeOS_manual
echo http://mirror.contribs.org/mirrors/
echo
set ds http://distro.ibiblio.org/pub/linux/distributions/smeserver/releases/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:SmeOS_stage2
set release 10
echo -n Release (9, 9.2, 10, 10.0, testing/10.0.rc1) : ${}
read release
echo

set kp sme
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel ${ds}${release}/smeos/x86_64/images/pxeboot/vmlinuz initrd=initrd.img ${kp} inst.repo=${ds}${release}/smeos/x86_64/
initrd ${ds}${release}/smeos/x86_64/images/pxeboot/initrd.img
boot
#################################################
:openEuler
set ds1 https://repo.openeuler.org/
set ds2 https://mirrors.huaweicloud.com/openeuler/
set ds3 https://mirror.nju.edu.cn/openeuler/
set ds4 http://mirrors.hit.edu.cn/openeuler/
set ds5 https://mirror.truenetwork.ru/openeuler/
set ds6 http://mirror.lzu.edu.cn/openeuler/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item 5 ${ds5}
item 6 ${ds6}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:openEuler_manual
echo https://openeuler.org/zh/mirror/list/
echo
set ds http://mirror.lzu.edu.cn/openeuler/
echo -n openEuler Site: ${}
read ds
echo
goto ${target}_stage2

:openEuler_stage2
set version 20.09
echo -n Version (20.03-LTS, 20.03-LTS-SP1, 20.09): ${}
read version
echo

set kp inst.gpt quiet
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel ${ds}openEuler-${version}/everything/x86_64/images/pxeboot/vmlinuz initrd=initrd.img inst.repo=${ds}openEuler-${version}/everything/x86_64/ ${kp}
initrd ${ds}openEuler-${version}/everything/x86_64/images/pxeboot/initrd.img
boot
#################################################
:CentosStream
set ds1 http://mirrors.ustc.edu.cn/centos/
set ds2 http://mirrors.huaweicloud.com/centos/
set ds3 http://ftp.sjtu.edu.cn/centos/
set ds4 http://hk.mirrors.thegigabit.com/centos/
set ds5 http://mirrors.tuna.tsinghua.edu.cn/centos/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item 5 ${ds5}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:CentosStream_manual
echo http://isoredirect.centos.org/centos/8-stream/isos/x86_64/
echo
set ds http://mirrors.tuna.tsinghua.edu.cn/centos/
echo -n Centos Stream Site: ${}
read ds
echo
goto ${target}_stage2

:CentosStream_stage2
set version 8
echo -n Version: ${}
read version
echo

set kp inst.gpt quiet
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel ${ds}${version}-stream/BaseOS/x86_64/os/images/pxeboot/vmlinuz initrd=initrd.img inst.repo=${ds}${version}-stream/BaseOS/x86_64/os ${kp}
initrd ${ds}${version}-stream/BaseOS/x86_64/os/images/pxeboot/initrd.img
boot
#################################################
:CloudLinuxOS
set ds1 https://repo.cloudlinux.com/cloudlinux/

menu Sites boot ${target} from:
item 1 ${ds1}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:CloudLinuxOS_manual
set ds https://repo.cloudlinux.com/cloudlinux/
echo -n Cloud Linux site: ${}
read ds
echo
goto ${target}_stage2

:CloudLinuxOS_stage2
set version 8
echo -n Cloud Linux installer Version (5 - 8): ${}
read version
echo

set kp ro ip=dhcp inst.gpt
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel ${ds}${version}/install/x86_64/os/images/pxeboot/vmlinuz initrd=initrd.img ${kp} inst.repo=${ds}${version}/install/x86_64/os
initrd ${ds}${version}/install/x86_64/os/images/pxeboot/initrd.img
boot
#################################################
:Absolute
set ds1 https://www.absolutelinux.org/ftp/
set ds2 https://slackware.uk/absolute/
set ds3 http://mirrors.standaloneinstaller.com/absolutelinux/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Absolute_manual
set ds https://www.absolutelinux.org/ftp/
echo -n Absolute Linux site: ${}
read ds
echo
goto ${target}_stage2

:Absolute_stage2
set version absolute-current64
echo -n Absolute Linux Version : ${}
read version
echo

set kp load_ramdisk=1 prompt_ramdisk=0 rw printk.time=0 nomodeset SLACK_KERNEL=huge.s
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel ${ds}${version}/kernels/huge.s/bzImage initrd=initrd.img ${kp}
initrd ${ds}${version}/isolinux/initrd.img
boot
#################################################
:PureOS
set ds1 https://mirrors.sonic.net/pureos/repo/pureos/
set ds2 https://mirrors.jevincanders.net/pureos/repo/pureos/
set ds3 http://mirror.linux.pizza/pureos/
set ds4 https://repo.puri.sm/pureos/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:PureOS_manual
set ds http://mirror.linux.pizza/pureos/
echo -n PureOS site: ${}
read ds
echo
goto ${target}_stage2

:PureOS_stage2
set release green
echo -n Release : ${}
read release
echo

set version current
echo -n PureOS Linux Version : ${}
read version
echo

set interface gtk
echo -n PureOS installer interface (tui, gtk): ${}
read interface
echo

set kp
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

iseq ${interface} gtk && set link gtk/ || set link

kernel ${ds}dists/${release}/main/installer-amd64/${version}/images/netboot/${link}debian-installer/amd64/linux initrd=initrd.gz ${kp}
initrd ${ds}dists/${release}/main/installer-amd64/${version}/images/netboot/${link}debian-installer/amd64/initrd.gz
boot
#################################################
:Springdale
set ds1 http://mirror.math.princeton.edu/pub/springdale/Springdale/
set ds2 http://ftp.halifax.rwth-aachen.de/puias/
set ds3 http://springdale.princeton.edu/data/springdale/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Springdale_manual
echo http://springdale.math.ias.edu/
echo
set ds http://mirror.math.princeton.edu/pub/springdale/Springdale/
echo -n Springdale site: ${}
read ds
echo
goto ${target}_stage2

:Springdale_stage2
set version 8
echo -n Springdale installer Version (6-8): ${}
read version
echo

set kp ro ip=dhcp inst.gpt
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel ${ds}${version}/x86_64/os/images/pxeboot/vmlinuz initrd=initrd.img inst.repo=${ds}${version}/x86_64/os ${kp}
initrd ${ds}${version}/x86_64/os/images/pxeboot/initrd.img
boot
#################################################
:ClearOS
set ds1 http://mirror1-singapore.clearos.com/clearos/
set ds2 http://mirror2-singapore.clearos.com/clearos/
set ds3 http://www.mirrorservice.org/sites/clearfoundation.com/
set ds4 http://mirror1-newyork.clearos.com/clearos/
set ds5 http://mirror1-sanfrancisco.clearos.com/clearos/


menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item 5 ${ds5}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:ClearOS_manual
echo http://mirror.clearos.com/mirrorlist/
echo
set ds http://mirror1-singapore.clearos.com/clearos/
echo -n ClearOS site: ${}
read ds
echo
goto ${target}_stage2

:ClearOS_stage2
set version 7
echo -n ClearOS installer Version : ${}
read version
echo

set kp ro ip=dhcp inst.gpt
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel ${ds}${version}/os/x86_64/images/pxeboot/vmlinuz initrd=initrd.img inst.repo=${ds}${version}/os/x86_64 ${kp}
initrd ${ds}${version}/os/x86_64/images/pxeboot/initrd.img
boot
#################################################
:onefilelinux
echo https://github.com/zhovner/OneFileLinux
echo Sites:
echo ${mirror0}
echo https://master.dl.sourceforge.net/project/ryanboot/
echo
set ds ${mirror0}
echo -n OneFileLinux site: ${}
read ds
echo

kernel ${ds}OneFileLinux.efi
boot
#################################################
:steamos
echo https://www.debian.org/mirror/list
echo Sites:
echo http://repo.steampowered.com/steamos/
echo https://mirrors.nju.edu.cn/steamos/steamos/
echo https://mirrors.tuna.tsinghua.edu.cn/steamos/steamos/
echo

set ds https://mirrors.tuna.tsinghua.edu.cn/steamos/steamos/
echo -n SteamOS site: ${}
read ds
echo

set version brewmaster
echo -n SteamOS installer Version (alchemist, clockwerk, brewmaster): ${}
read version
echo

set interface gtk
echo -n Debian installer interface (tui, gtk): ${}
read interface
echo


echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

iseq ${interface} gtk && set link gtk/ || set link
cpuid --ext 29 && set arch amd64 || set arch i386


kernel ${ds}dists/${version}/main/installer-${arch}/current/images/netboot/${link}debian-installer/${arch}/linux initrd=initrd.gz ${kp}
initrd ${ds}dists/${version}/main/installer-${arch}/current/images/netboot/${link}debian-installer/${arch}/initrd.gz
boot
#################################################
:memtest86

echo Sites:
echo ${mirror0}
echo http://hkkitlee.ddns.net:8999/
echo
set ds ${mirror0}
echo -n Memtest86 site: ${}
read ds
echo

sanboot --no-describe --drive 0x80 ${ds}Memtest86-7.5.iso
#################################################
:supergrub2

echo Sites:
echo ${mirror0}
echo http://hkkitlee.ddns.net:8999/
echo
set ds ${mirror0}
echo -n Super Grub2 Disk site: ${}
read ds
echo

sanboot --no-describe --drive 0x80 ${ds}super_grub2_disk_hybrid_2.04s1.iso
#################################################
:clearlinux
echo https://docs.01.org/clearlinux/latest/get-started/ipxe-install.html#
echo

echo Sites:
echo https://master.dl.sourceforge.net/project/ryanboot/clearlinux/
echo ${mirror0}clearinux/
echo
set ds ${mirror0}clearlinux/
echo -n Clear Linux OS site: ${}
read ds
echo

echo Below sample from Clear Linux OS
echo https://cdn.download.clearlinux.org/current/config/image/live-desktop.yaml
echo https://cdn.download.clearlinux.org/current/config/image/live-server.yaml
echo
set config https://cdn.download.clearlinux.org/current/config/image/live-server.yaml
echo -n Please enter your yaml config location: ${}
read config
echo

iseq ${ds} https://master.dl.sourceforge.net/project/ryanboot/clearlinux/ && set link ?viasf=1 ||

set kp init=/usr/lib/systemd/systemd-bootchart initcall_debug tsc=reliable no_timer_check noreplace-smp rw clri.descriptor=${config}
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

set answer n
echo CAUTION!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
echo CAUTION!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
echo CAUTION!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
echo Your computer will be formatted without ANYMORE prompt
echo -n Are you SURE!!!? ( Y / n ):${}
read answer
echo
iseq ${answer} Y && goto clearlinuxinstall || goto start
echo

###
:clearlinuxinstall
kernel --name linux --timeout 100000 ${ds}linux${link} initrd=initrd ${kp}
initrd --name initrd --timeout 100000 ${ds}initrd${link}
boot
#################################################
:blackarch
echo https://blackarch.org/blackarch-install.html
echo

echo Sites:
echo https://master.dl.sourceforge.net/project/ryanboot/blackarch/
echo ${mirror0}blackarch/
echo
set ds ${mirror0}blackarch/
echo -n BlackArch site: ${}
read ds
echo

echo Login : root
echo Password : blackarch 
echo Installer script : blackarch-install
echo

iseq ${ds} https://master.dl.sourceforge.net/project/ryanboot/blackarch/ && set link ?viasf=1 ||

set kp ip=dhcp archisobasedir=blackarch archiso_http_srv=${ds}
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name vmlinuz-linux --timeout 100000 ${ds}blackarch/boot/x86_64/vmlinuz-linux${link} initrd=initramfs-linux.img initrd=amd-ucode.img initrd=intel-ucode.img ${kp}
initrd --name initramfs-linux.img --timeout 100000 ${ds}blackarch/boot/x86_64/initramfs-linux.img${link}
initrd --name amd-ucode.img --timeout 100000 ${ds}blackarch/boot/amd-ucode.img${link}
initrd --name intel-ucode.img --timeout 100000 ${ds}blackarch/boot/intel-ucode.img${link}
boot
#################################################
:proxmoxve

echo Sites:
echo https://master.dl.sourceforge.net/project/ryanboot/proxmox/
echo ${mirror0}proxmox/
echo
set ds ${mirror0}proxmox/
echo -n Proxmox-VE site: ${}
read ds
echo

iseq ${ds} https://master.dl.sourceforge.net/project/ryanboot/proxmox/ && set link ?viasf=1 ||

echo ramdisk_size value is in kb
set kp ro ramdisk_size=921600 rw splash=verbose
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name linux26 --timeout 100000 ${ds}linux26${link} linux26 initrd=initrd.img initrd=proxmox.iso.img ${kp}
initrd --name initrd.img --timeout 100000 ${ds}initrd.img${link}
initrd --name proxmox.iso.img --timeout 100000 ${ds}proxmox.iso.img${link}
boot
#################################################
:garuda-wayfire

echo Sites:
echo https://master.dl.sourceforge.net/project/ryanboot/garuda-wayfire/
echo ${mirror0}garuda-wayfire/
echo
set ds ${mirror0}garuda-wayfire/
echo -n Garuda site: ${}
read ds
echo

echo Login : garuda
echo Password : garuda
echo

iseq ${ds} https://master.dl.sourceforge.net/project/ryanboot/garuda-wayfire/ && set link ?viasf=1 ||

set kp ip=dhcp misobasedir=garuda miso_http_srv=${ds} driver=free nouveau.modeset=1 i915.modeset=1 radeon.modeset=1 systemd.show_status=1 'apparmor=1' 'security=apparmor'
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name vmlinuz-x86_64 --timeout 100000 ${ds}boot/vmlinuz-x86_64${link} initrd=initramfs-x86_64.img initrd=amd_ucode.img initrd=intel_ucode.img ${kp}
initrd --name initramfs-x86_64.img --timeout 100000 ${ds}boot/initramfs-x86_64.img${link}
initrd --name amd_ucode.img --timeout 100000 ${ds}boot/amd_ucode.img${link}
initrd --name intel_ucode.img --timeout 100000 ${ds}boot/intel_ucode.img${link}
boot
#################################################
:oracle8
echo https://master.dl.sourceforge.net/project/ryanboot/oracle8/
echo ${mirror0}oracle8/
echo

set ds ${mirror0}oracle8/
echo -n OracleLinux R8 site: ${}
read ds
echo

iseq ${ds} https://master.dl.sourceforge.net/project/ryanboot/oracle8/ && set link ?viasf=1 ||

set kp ro ip=dhcp inst.gpt inst.stage2.all inst.repo=https://yum.oracle.com/repo/OracleLinux/OL8/baseos/latest/x86_64/ inst.stage2=${ds}
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

initrd --name initrd.img --timeout 100000 ${ds}images/pxeboot/initrd.img${link}
kernel --name vmlinuz --timeout 100000 ${ds}images/pxeboot/vmlinuz${link} initrd=initrd.img ${kp}
boot
#################################################
:manjaro-xfce

echo Sites:
echo https://master.dl.sourceforge.net/project/ryanboot/manjaro-xfce/
echo ${mirror0}manjaro-xfce/
echo
set ds ${mirror0}manjaro-xfce/
echo -n Manjaro site: ${}
read ds
echo

iseq ${ds} https://master.dl.sourceforge.net/project/ryanboot/manjaro-xfce/ && set link ?viasf=1 ||

set kp ip=dhcp misobasedir=manjaro miso_http_srv=${ds} driver=free nouveau.modeset=1 i915.modeset=1 radeon.modeset=1
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name vmlinuz-x86_64 --timeout 100000 ${ds}boot/vmlinuz-x86_64${link} initrd=initramfs-x86_64.img initrd=amd_ucode.img initrd=intel_ucode.img ${kp}
initrd --name initramfs-x86_64.img --timeout 100000 ${ds}boot/initramfs-x86_64.img${link}
initrd --name amd_ucode.img --timeout 100000 ${ds}boot/amd_ucode.img${link}
initrd --name intel_ucode.img --timeout 100000 ${ds}boot/intel_ucode.img${link}
boot
#################################################
:gentoo-minimal

echo https://wiki.gentoo.org/wiki/Handbook:X86/Full/Installation#Minimal_installation_CD
echo https://www.unixmen.com/a-beginners-guide-to-install-gentoo/
echo

echo Sites:
echo https://master.dl.sourceforge.net/project/ryanboot/gentoo-minimal/
echo ${mirror0}gentoo-minimal/
echo
set ds ${mirror0}gentoo-minimal/
echo -n Gentoo site: ${}
read ds
echo

iseq ${ds} https://master.dl.sourceforge.net/project/ryanboot/gentoo-minimal/ && set link ?viasf=1 ||

set kp root=/dev/ram0 init=/linuxrc dokeymap looptype=squashfs loop=/image.squashfs cdroot vga=791
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name gentoo --timeout 100000 ${ds}boot/gentoo${link} initrd=gentoo.igz initrd=image.squashfs.img ${kp}
initrd --name gentoo.igz --timeout 100000 ${ds}boot/gentoo.igz${link}
initrd --name image.squashfs.img --timeout 100000 ${ds}image.squashfs.img${link}
boot
#################################################
:rocky

echo https://rockylinux.org/
echo Site:
echo http://download.rockylinux.org/pub/rocky/
echo
set ds http://download.rockylinux.org/pub/rocky/
echo -n Rocky Linux Site: ${}
read ds
echo

set version 8
echo -n (8.3, 8(8.4)) Version: ${}
read version
echo


set kp ro ip=dhcp inst.gpt
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel ${ds}${version}/BaseOS/x86_64/os/images/pxeboot/vmlinuz initrd=initrd.img inst.repo=${ds}${version}/BaseOS/x86_64/os ${kp}
initrd ${ds}${version}/BaseOS/x86_64/os/images/pxeboot/initrd.img
boot
#################################################
:gparted-live

 echo Sites:
 echo https://master.dl.sourceforge.net/project/ryanboot/${target}/
 echo ${mirror0}${target}/
 echo
 set ds ${mirror0}${target}/
 echo -n Gparted-Live site: ${}
 read ds
 echo

set answer Y
echo This initrd is not support fetch filesystem.squashfs from https (SourceForge forced to Y).
echo -n Do you want to use iPXE injection to boot (Y/n): ${}
read answer
echo

 iseq ${ds} https://master.dl.sourceforge.net/project/ryanboot/${target}/ && set link ?viasf=1 && set answer Y ||
iseq ${answer} Y && set img initrd=${target}.iso.img && set from fromiso=/${target}.iso || set from fetch=${ds}live/filesystem.squashfs

 set kp boot=live union=overlay username=user components noeject noswap ethdevice-timeout=60 net.ifnames=0 hooks=filesystem ${from}
 echo -n Kernel Parameter, Bootcode: ${}
 read kp
 echo

 kernel --name vmlinuz --timeout 100000 ${ds}live/vmlinuz${link} initrd=initrd.img ${img} ${kp}
 initrd --name initrd.img --timeout 100000 ${ds}live/initrd.img${link}
 iseq ${answer} Y && initrd --name ${target}.iso.img --timeout 100000 ${ds}${target}.iso.img${link} ||
 boot
#################################################
:clonezilla

 echo Lite Server Mode---https://clonezilla.org/show-live-doc-content.php?topic=clonezilla-live/doc/11_lite_server
 echo Sites:
 echo https://master.dl.sourceforge.net/project/ryanboot/${target}/
 echo ${mirror0}${target}/
 echo
 set ds ${mirror0}${target}/
 echo -n Clonezilla-Live site: ${}
 read ds
 echo

set answer Y
echo This initrd is not support fetch filesystem.squashfs from https (SourceForge forced to Y).
echo -n Do you want to use iPXE injection to boot (Y/n): ${}
read answer
echo

 iseq ${ds} https://master.dl.sourceforge.net/project/ryanboot/${target}/ && set link ?viasf=1 && set answer Y ||
iseq ${answer} Y && set img initrd=${target}.iso.img && set from fromiso=/${target}.iso || set from fetch=${ds}live/filesystem.squashfs

 
set kp config enforcing=0 username=user components noeject hooks=filesystem ocs_live_run="ocs-live-general" ocs_live_extra_param="" ocs_live_batch="no" vga=788 ${from} edd=on nomodeset 
 echo -n Kernel Parameter, Bootcode: ${}
 read kp
 echo

 kernel --name vmlinuz --timeout 100000 ${ds}live/vmlinuz${link} initrd=initrd.img boot=live union=overlay ${img} ${kp}
 initrd --name initrd.img --timeout 100000 ${ds}live/initrd.img${link}
 iseq ${answer} Y && initrd --name ${target}.iso.img --timeout 100000 ${ds}${target}.iso.img${link} ||
 boot
#################################################
:redorescue

 echo Sites:
 echo https://master.dl.sourceforge.net/project/ryanboot/${target}/
 echo echo ${mirror0}${target}/
 echo
 set ds ${mirror0}${target}/
 echo -n Redo-Rescue site: ${}
 read ds
 echo

set answer Y
echo This initrd is not support fetch filesystem.squashfs from https (SourceForge forced to Y).
echo -n Do you want to use iPXE injection to boot (Y/n): ${}
read answer
echo

 iseq ${ds} https://master.dl.sourceforge.net/project/ryanboot/${target}/ && set link ?viasf=1 && set answer Y ||
iseq ${answer} Y && set img initrd=${target}.iso.img && set from fromiso=/${target}.iso || set from fetch=${ds}live/filesystem.squashfs

 set kp boot=live union=overlay username=user vga=791 quiet splash setkmap=us ${from}
echo -n Kernel Parameter, Bootcode: ${}
 read kp
 echo

 kernel --name vmlinuz --timeout 100000 ${ds}vmlinuz${link} initrd=initrd ${img} ${kp}
 initrd --name initrd --timeout 100000 ${ds}initrd${link}
 iseq ${answer} Y && initrd --name ${target}.iso.img --timeout 100000 ${ds}${target}.iso.img${link} ||
 boot
#################################################
:partmagic
echo Reference:
echo https://partedmagic.com/pxe/
echo boot/pxelinux/pm2pxe.sh
echo
echo Sites:
echo https://master.dl.sourceforge.net/project/ryanboot/partmagic/
echo ${mirror0}partmagic/
echo
set ds ${mirror0}partmagic/
echo -n Parted Magic site: ${}
read ds
echo

iseq ${ds} https://master.dl.sourceforge.net/project/ryanboot/partmagic/ && set link ?viasf=1 ||

set kp edd=on vga=normal boot=live eject=no
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name bzImage --timeout 100000 ${ds}pmagic/bzImage${link} linux26 initrd=initrd.img initrd=fu.img initrd=m.img initrd=files.cgz ${kp}
initrd --name initrd.img --timeout 1000000 ${ds}pmagic/initrd.img${link}
initrd --name fu.img --timeout 1000000 ${ds}pmagic/fu.img${link}
initrd --name m.img --timeout 1000000 ${ds}pmagic/m.img${link}
initrd --name files.cgz --timeout 1000000 ${ds}pmagic/files.cgz${link}
boot

#################################################
#################################################
#################################################
:background

set pic https://github.com/hkkitlee/Ryanboot-offical-linux-netbooter/raw/main/1.png
echo -n Picture URL (png): ${}
read pic
set x 800
echo -n Length: ${}
read x
set y 600
echo -n Height: ${}
read y
console --picture ${pic} --x ${x} --y ${y}
goto start
#################################################
:colour
echo https://ipxe.org/cmd/cpair
echo

set fc 0
echo -n Foreground colour index: ${}
read fc

set bc 7
echo -n Background colour index: ${}
read bc

set pi 7
echo -n Pair index: ${}
read pi

cpair --foreground ${fc} --background ${bc} ${pi}

set leave y
echo -n Press enter to leave or N/n to do again:${}
read leave
echo
iseq ${answer} n && goto colour ||
iseq ${answer} N && goto colour ||
goto start
#################################################
:setting
config
goto start
#################################################
:xyz
chain --autofree http://boot.netboot.xyz
#################################################
:cl
set script 
echo Format:https://gitee.com/xxx  <---Enter your URL replace xxx
echo -n Command:chain --autofree --replace https://gitee.com/${}
read script
echo
chain --autofree --replace https://gitee.com/${script} || chain --autofree --replace https://github.com/hkkitlee/Ryanboot-offical-linux-netbooter/raw/main/oln.ipxe || chain --autofree --replace https://gitee.com/hkkitlee/Ryanboot-offical-linux-netbooter/raw/main/oln.ipxe
#################################################
:ryanboot
chain --autofree https://github.com/hkkitlee/Ryanboot/raw/main/chain.ipxe || chain --autofree https://gitee.com/hkkitlee/Ryanboot/raw/main/chain.ipxe || chain --autofree http://hkkitlee.ddns.net:8999/chain.ipxe || exit
