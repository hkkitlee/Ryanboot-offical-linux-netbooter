#!ipxe
###無雙 Project Gutenberg###
###任何事情做到極致，都是藝術。###
###The pursuit of perfection in any field ... is an art.###

###var explain
#ds1 = data site option 1
#ds = chose data site boot from
#siteno = data site array num
#interface = tui/gui
#kp = kernel parameter
#link = option for URL link
#arch = i386/amd64

console --picture https://github.com/hkkitlee/Ryanboot-offical-linux-netbooter/raw/main/logo.png --x 1024 --y 768 || console --picture https://gitee.com/hkkitlee/Ryanboot-offical-linux-netbooter/raw/main/logo.png --x 1024 --y 768 ||  console --picture http://hkkitlee.ddns.net:8999/logo.png --x 1024 --y 768
imgtrust --allow 

set mirror0 http://183.230.23.18:58000/ryanboot/
set mirror1 http://jackieojackie.ddns.net:8999/ryanboot/
set sourceforge https://phoenixnap.dl.sourceforge.net/projects/ryanboot/
#set sourceforge https://sourceforge.net/projects/ryanboot/
#set sourceforge https://master.dl.sourceforge.net/project/ryanboot/
set sourceforge1 http://downloads.sourceforge.net/project/ryanboot/


goto start

:start
menu			Ryanboot-offical-linux-netbooter

item	--gap	--	IP: ${ip}/${netmask} Mac Address:${mac}
item	--gap	--	DHCP:${dhcp-server} Gateway:${gateway} DNS:${dns}
item	--gap	--	next-server(proxy):${next-server}/${proxydhcp/next-server} SMBIOS UUID:${uuid}
item	--gap	--	Chip:${chip} Platform:${platform} Build Arch:${buildarch} Version:${version}
item	--gap	--	https://hkkitlee.ddns.net:9000/ https://github.com/hkkitlee/Ryanboot
item	--gap	--	Chainload:http://hkkitlee.ddns.net:8999/chain.ipxe
item	--gap	--	https://git[hub,ee].com/hkkitlee/Ryanboot-offical-linux-netbooter
item	--gap  

item	--gap	--	Ryanboot-offical-linux-netbooter
item	--key a installer		(A) List Installer
item	--key b live			(B) List Live
item	--key c	based			(C) List by Based on

item	--gap  
item	--key d Memtest86		(D) Memtest86
item	--key e SuperGrub2		(E) SuperGrub2 Disk
item	--gap
item	--gap	--	Config
item		background		Background (PNG, Sreen Size) config
item		colour			cpair config
item		setting			iPXE config
item	--gap
item		poweroff		PowerOff
item		reboot			Reboot
item	--gap
item	--gap	--	Chainload to boot from...
item		ryanboot		Ryanboot
item		rpbl			Ryanboot-P2PBitTorrent-Boot-Linux
item		cl			https://gitee.com/xxx
item		xyz			netboot.xyz


choose target && cpair 0 && goto ${target}

:installer
menu		Ryanboot-offical-linux-netbooter (List Installer)

item	--gap	--	Auto select amd64/i[3,6]86. Release/Version Selection. 
item	--gap	--	tui/gtk Text/Graphical User Interface. (Mirror) for hosting by Third party file server.
item	--key a Ubuntu-install		(a) Ubuntu amd64/i386
item	--key b	Fedora			(b) Fedora (Everything, Server, Silverblue) amd64
item	--key c	Debian			(c) Debian amd64/i386
item	--key d	Parrot			(d) Parrot-Linux amd64/i386
item	--key e	Kali			(e) Kali-Linux amd64/i386 
item	--key f	openSUSE		(f) openSUSE amd64/i386
item	--key g	IPFire			(g) IPFire amd64/i586
item	--key h	Mageia			(h) Mageia amd64/i586
item	--key i	Devuan			(i) Devuan amd64/i386
item	--key j	Alma			(j) AlmaLinux amd64
item	--key k	coreosinstall		(k) Fedora CoreOS amd64
item	--key l	SmeOS			(l) Koozali SME Server amd64
item	--key m	openEuler		(m) openEuler amd64
item	--key n	CentOS			(n) CentOS amd64
item	--key o	CloudLinuxOS		(o) CloudLinux OS amd64
item	--key p	Absolute		(p) Absolute-Linux amd64
item	--key q	PureOS			(q) PureOS Linux amd64
item	--key r	Springdale		(r) Springdale Linux amd64
item	--key s	ClearOS			(s) ClearOS Linux amd64
item	--key t	SteamOS			(t) SteamOS Linux amd64
item	--key u	ClearLinux		(u) Clear Linux OS amd64 (Mirror)
item	--key v	ProxmoxVE		(v) Proxmox VE OS amd64 (Mirror)
item	--key w	Oracle8			(w) OracleLinux R8 Full amd64 (Mirror)
item	--key x	Rocky			(x) RockyLinux 8 amd64
item	--key y	ProxmoxBackup		(y) Proxmox Backup Server OS amd64 (Mirror)
item	--key z	ProxmoxMailGateway	(z) Proxmox MailGateway OS amd64 (Mirror)
item	--gap -- Shortcut CAPITALS Letter
item	--key A VzLinux8		(A) VzLinux 8 amd64 (Mirror)
item	--key B EuroLinux		(B) EuroLinux amd64 (Mirror)
item	--key C Amahi			(C) Amahi 11 amd64 (Mirror)
item	--key D Centosstream		(D) Centos-Stream amd64
item	--key E UCS			(E) Univention Corporate Server amd64

item	--gap
item		start			Back to Top
choose target && cpair 0 && goto ${target}


:live
menu		Ryanboot-offical-linux-netbooter (List Live)

item	--gap	--	Auto select amd64/i[3,6]86. Release/Version Selection. 
item	--gap	--	tui/gtk Text/Graphical User Interface. (Mirror) for hosting by Third party file server.
item	--key a	Arch			(a) Arch Linux amd64 Live with Option Installer Script
item	--key b	Tinycore		(b) Tinycore amd64/i386
item	--key c	Alpine			(c) Alpine amd64/i386
item	--key d	Slitaz			(d) SliTaz rolling amd64/i386 (Support by teasiu@bbs.wuyou.net) (Mirror)
item	--key e	Slax			(e) Slax amd64/i386
item	--key f	Slackware		(f) Slackware amd64/i386 with Installer
item	--key g	Rancheros		(g) Rancher OS amd64/i386
item	--key h	X-wrt			(h) X-wrt amd64/i386
item	--key i	Containerlinux		(i) Container Linux by flatcar amd64
item	--key j	coreoslive		(j) Fedora CoreOS amd64
item	--key k	Fatdog			(k) Fatdog64 Linux amd64
item	--key l	OneFileLinux		(l) OneFileLinux
item	--key m	BlackArch		(m) BlackArch Linux amd64 Live with Installer Script (Mirror)
item	--key n Garuda			(n) Garuda Linux Xfce amd64 Live with Installer (Mirror)
item	--key o Manjaro-Xfce		(o) Manjaro Linux Xfce amd64 Live with Installer (Mirror)
item	--key p Gentoo-Minimal		(p) Gentoo Linux Minimal amd64 (Mirror)
item	--key q Gparted-Live		(q) Gparted-Live amd64 (Mirror)
item	--key r Clonezilla		(r) Clonezilla Live/Lite Server amd64 (Mirror)
item	--key s	RedoRescue		(s) Redo-Rescue amd64 (Mirror)
item	--key t	PartedMagic		(t) Parted Magic amd64 (Mirror)
item	--key u	UbuntuKylin		(u) Ubuntu Kylin Live with Installer amd64 (Mirror)
item	--key v	Ubuntu-Live		(v) Ubuntu Live with Installer amd64 (Mirror)
item	--key w	MLL			(w) Minimal Linux Live amd64 (Mirror)
item	--key x	Live-Raizo		(x) Live-Raizo amd64 (Mirror)
item	--key y	SystemRescue		(y) SystemRescue amd64 (Mirror)
item	--key z	EndeavourOS		(z) EndeavourOS Linux amd64 Live with Installer (Mirror)
item	--gap -- Shortcut CAPITALS Letter
item	--key A	Bluestar		(A) Bluestar Linux amd64 Live with Installer (Mirror)
item	--key B	Grml			(B) Grml Linux amd64/i686+ Live (Mirror)
item	--key C	Linux-Lite		(C) Linux-Lite amd64 Live (Mirror)
item	--key D	Archman			(D) Archman Linux amd64 Live with Installer (Mirror)
item	--key E Mabox			(E) Mabox amd64 (Mirror)
item	--key F ArcoLinux		(F) ArcoLinux amd64 (Mirror)
item	--key G	Debian-Live		(G) Debian-Live xfce amd64/i386
item	--key H Snal			(H) Snal amd64 (Mirror)
item	--key I Reborn			(I) RebornLinux amd64 (Mirror)
item	--key J Rescuezilla		(J) Rescuezilla amd64 (Mirror)
item	--key K ArchLabs		(K) ArchLabs amd64 with Installer (Mirror)
item	--key L ArchBang		(L) ArchBang amd64 with Installer (Mirror)
item	--key M Plop			(M) PlopLinux amd64 (Mirror)
item	--key N Hyperbola		(N) Hyperbola amd64 (Mirror)

item	--gap
item		start			Back to Top
choose target && cpair 0 && goto ${target}


:based
menu            Ryanboot-offical-linux-netbooter (List by Based on)

item	--gap	--	Auto select amd64/i[3,6]86. Release/Version Selection.
item	--gap	--	tui/gtk Text/Graphical User Interface. (Mirror) for hosting by Third party file server.
item	--gap

item	--gap RedHat
item	Rocky				RockyLinux 8 installer amd64
item	Oracle8				OracleLinux R8 Full installer amd64 (Mirror)
item	CentOS				CentOS installer amd64
item	Fedora				Fedora installer (Everything, Server, Silverblue) amd64
item	coreosinstall			Fedora CoreOS installer amd64
item	coreoslive			Fedora CoreOS live amd64
item	Alma				AlmaLinux installer amd64
item	Springdale			Springdale Linux installer amd64
item	SmeOS				Koozali SME Server installer amd64
item	ClearOS				ClearOS Linux installer amd64
item	CloudLinuxOS			CloudLinux OS installer amd64
item	openEuler			openEuler installer amd64
item	VzLinux8			VzLinux 8 installer amd64 (Mirror)
item	EuroLinux			EuroLinux installer amd64 (Mirror)
item	Amahi				Amahi 11 installer amd64 (Mirror)
item	Centosstream			Centos-Stream amd64
item	--gap

item	--gap Debian
item	Debian				Debian installer amd64/i386
item	Ubuntu-install			Ubuntu installer amd64/i386
item	Kali				Kali-Linux installer amd64/i386
item	Parrot				Parrot-Linux installer amd64/i386
item	ProxmoxVE			Proxmox VE OS installer amd64 (Mirror)
item	ProxmoxBackup			Proxmox Backup Server OS installer amd64 (Mirror)
item	ProxmoxMailGateway		Proxmox MailGateway OS installer amd64 (Mirror)
item	Slax				Slax live amd64/i386
item	Devuan				Devuan installer amd64/i386
item	PureOS				PureOS Linux installer amd64
item	SteamOS				SteamOS Linux installer amd64
item	Gparted-Live			Gparted-Live live amd64 (Mirror)
item	Clonezilla			Clonezilla Live/Lite Server live amd64 (Mirror)
item	RedoRescue			Redo-Rescue live amd64 (Mirror)
item	PartedMagic			Parted Magic live amd64 (Mirror)
item	UbuntuKylin			Ubuntu Kylin live with Installer amd64 (Mirror)
item	Ubuntu-Live			Ubuntu Live with Installer amd64 (Mirror)
item	Live-Raizo			Live-Raizo Live amd64 (Mirror)
item	Grml				Grml Linux amd64/i686+ Live (Mirror)
item	Linux-Lite			Linux-Lite amd64 Live (Mirror)
item	Debian-Live			Debian-Live xfce amd64/i386
item	UCS				Univention Corporate Server amd64
item	Rescuezilla			Rescuezilla amd64 (Mirror)
item	--gap

item	--gap Arch
item	Arch				Arch Linux live amd64 with Option Installer Script
item	Manjaro-Xfce			Manjaro Linux Xfce live amd64 with Installer (Mirror)
item	BlackArch			BlackArch Linux live amd64 with Installer Script (Mirror)
item	Garuda				Garuda Linux Xfce live amd64 with Installer (Mirror)
item	SystemRescue			SystemRescue live amd64 (Mirror)
item	EndeavourOS			EndeavourOS Linux live amd64 with Installer (Mirror)
item	Bluestar			Bluestar Linux live amd64 with Installer (Mirror)
item	Archman				Archman Linux amd64 Live with Installer (Mirror)
item	Mabox				Mabox amd64 (Mirror)
item	ArcoLinux			ArcoLinux amd64 (Mirror)
item	Snal				Snal amd64 (Mirror)
item	Reborn				RebornLinux amd64 (Mirror)
item	ArchLabs			ArchLabs amd64 with Installer (Mirror)
item	ArchBang			ArchBang amd64 with Installer (Mirror)
item	Hyperbola			Hyperbola amd64 (Mirror)
item	--gap

item	--gap Gentoo
item	Gentoo-Minimal			Gentoo Linux Minimal live amd64 (Mirror)
item	Containerlinux			Container Linux by flatcar live amd64
item	--gap

item	--gap openSUSE
item	openSUSE			openSUSE installer amd64/i386
item	--gap

item	--gap Slackware
item	Slackware			Slackware live amd64/i386 with Installer
item	Absolute			Absolute-Linux installer amd64
item	--gap

item	--gap Busybox
item	Tinycore			Tinycore live amd64/i386
item	Slitaz				SliTaz rolling live amd64/i386 (Support by teasiu@bbs.wuyou.net) (Mirror)
item	Alpine				Alpine live amd64/i386
item	X-wrt				X-wrt live amd64/i386
item	--gap

item	--gap Mandriva
item	Mageia				Mageia installer amd64/i586
item	--gap

item	--gap Puppy
item	Fatdog				Fatdog64 Linux live amd64
item	--gap

item	--gap Others
item	IPFire				IPFire installer amd64/i586
item	Rancheros			Rancher OS live amd64/i386
item	ClearLinux			Clear Linux OS installer amd64 (Mirror)
item	OneFileLinux			OneFileLinux live
item	MLL				Minimal Linux Live amd64 (Mirror)
item	Plop				PlopLinux amd64 (Mirror)
item	--gap

item	start				Back to Top
choose target && cpair 0 && goto ${target}


:failed
start

:poweroff
poweroff

:reboot
reboot

:rpbl
chain https://github.com/hkkitlee/Ryanboot-P2PBitTorrent-Boot-Linux/raw/master/RPBL.ipxe || chain https://gitee.com/hkkitlee/Ryanboot-P2PBitTorrent-Boot-Linux/raw/master/RPBL.ipxe

#################################################
:Ubuntu-install

set ds1 http://archive.ubuntu.com
set ds2 http://mirrors.layeronline.com
set ds3 http://mirrors.aliyun.com
set ds4 http://mirrors.tuna.tsinghua.edu.cn

menu Sites boot ${target} from:
item --gap -- http://releases.ubuntu.com/
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Ubuntu-install_manual
echo Mirror List: https://launchpad.net/ubuntu/+archivemirrors
echo
set ds http://mirrors.tuna.tsinghua.edu.cn
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Ubuntu-install_stage2
echo Ubuntu 18.04.5 LTS (Bionic Beaver)
echo Ubuntu 20.04.2 LTS (Focal Fossa)
echo Ubuntu 20.10 (Groovy Gorilla)
echo Ubuntu 21.04 (Hirsute Hippo)
echo
set version focal
echo -n Ubuntu installer Version (bionic, focal, groovy, hirsute): ${}
read version

echo Ubuntu only provide i386 netinstaller for Groovy & Hirsute.
echo No amd64 is available.

echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

iseq ${version} focal && set link legacy- ||
cpuid --ext 29 && set arch amd64 || set arch i386

#reset arch to i386 for netinstaller in Groovy / Hirsute.
iseq ${version} groovy && set arch i386 || 
iseq ${version} hirsute && set arch i386 ||

kernel ${ds}/ubuntu/dists/${version}/main/installer-${arch}/current/${link}images/netboot/ubuntu-installer/${arch}/linux initrd=initrd.gz ${kp}
initrd ${ds}/ubuntu/dists/${version}/main/installer-${arch}/current/${link}images/netboot/ubuntu-installer/${arch}/initrd.gz

boot

#root=/dev/ram0 ramdisk_size=1500000 ip=dhcp url=http://cdimage.ubuntu.com/ubuntu-server/daily-live/current/focal-live-server-amd64.iso


#################################################
:Fedora

set ds1 http://ftp.cuhk.edu.hk/pub/linux
set ds2 http://mirrors.tuna.tsinghua.edu.cn
set ds3 http://ftp-srv2.kddilabs.jp/Linux/packages
set ds4 http://ftp.riken.jp/Linux
set ds5 https://hkg.mirror.rackspace.com/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Fedora_manual
echo Mirror List: https://mirrors.fedoraproject.org
set ds http://mirrors.tuna.tsinghua.edu.cn
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Fedora_stage2
set version 35
echo -n Fedora installer Version (32-35): ${}
read version
echo

set release Everything
echo -n Release (Everything, Server, Silverblue): ${}
read release
echo

set kp ro ip=dhcp inst.gpt
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

set path ${ds}/fedora/releases/${version}/${release}/x86_64/os
initrd ${path}/images/pxeboot/initrd.img
kernel ${path}/images/pxeboot/vmlinuz initrd=initrd.img inst.stage2=${path} ${kp}
boot
#################################################
:Debian

set ds1 http://ftp.hk.debian.org
set ds2 http://ftp2.cn.debian.org
set ds3 http://ftp.cn.debian.org
set ds4 http://ftp.kr.debian.org
set ds5 http://ftp.ca.debian.org
set ds6 https://mirrors.tuna.tsinghua.edu.cn

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item 5 ${ds5}
item 6 ${ds6}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Debian_manual
echo Mirror List: https://www.debian.org/mirror/list
echo
set ds https://mirrors.tuna.tsinghua.edu.cn
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Debian_stage2
set version bullseye
echo -n Debian installer Version (bullseye, buster, jessie): ${}
read version
echo

set interface gtk
echo -n Debian installer interface (tui, gtk): ${}
read interface
echo


echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

iseq ${interface} gtk && set link gtk/ || set link
cpuid --ext 29 && set arch amd64 || set arch i386


initrd ${ds}/debian/dists/${version}/main/installer-${arch}/current/images/netboot/${link}debian-installer/${arch}/initrd.gz
kernel ${ds}/debian/dists/${version}/main/installer-${arch}/current/images/netboot/${link}debian-installer/${arch}/linux initrd=initrd.gz ${kp}

boot
#################################################
:Parrot

set ds1 http://dk.archive.ubuntu.com
set ds2 http://mirrors.mit.edu
set ds3 http://ftp.th.debian.org
set ds4 http://mirror.kku.ac.th
set ds5 http://mirrors.ustc.edu.cn/
set ds6 https://mirrors.sjtug.sjtu.edu.cn
set ds7 https://mirrors.tuna.tsinghua.edu.cn

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item 5 ${ds5}
item 6 ${ds6}
item 7 ${ds7}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:Parrot_manual
echo Mirror List: https://docs.parrotlinux.org/mirror-list/
echo
set ds https://mirrors.tuna.tsinghua.edu.cn
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2


:Parrot_stage2
set release parrot
echo -n Release (parrot, stable): ${}
read release
echo

set version current
echo -n Version: ${}
read version
echo

set interface gtk
echo -n Parrot installer interface (tui, gtk): ${}
read interface
echo

set kp auto
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

iseq ${interface} gtk && set link gtk/ || set link
cpuid --ext 29 && set arch amd64 || set arch i386


kernel ${ds}/parrot/dists/${release}/main/installer-${arch}/${version}/images/netboot/${link}debian-installer/${arch}/linux initrd=initrd.gz ${kp}
initrd ${ds}/parrot/dists/${release}/main/installer-${arch}/${version}/images/netboot/${link}debian-installer/${arch}/initrd.gz

boot
#################################################
:Kali

set ds1 https://http.kali.org
set ds2 http://kali.download
set ds3 http://ftp.jaist.ac.jp/pub/Linux
set ds4 http://mirror.serverius.net
set ds5 http://mirror1.ku.ac.th
set ds6 http://kali.cs.nctu.edu.tw
set ds7 https://mirrors.tuna.tsinghua.edu.cn

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item 5 ${ds5}
item 6 ${ds6}
item 7 ${ds7}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:Kali_manual
echo Mirror List: http://http.kali.org/README.mirrorlist
echo
set ds https://mirrors.tuna.tsinghua.edu.cn
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Kali_stage2
set release rolling
echo -n Release (rolling, dev, last-snapshot): ${}
read release
echo

set version current
echo -n Version: ${}
read version
echo

set interface gtk
echo -n Kali installer interface (tui, gtk): ${}
read interface
echo

set kp auto
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

iseq ${interface} gtk && set link gtk/ || set link
cpuid --ext 29 && set arch amd64 || set arch i386


kernel ${ds}/kali/dists/kali-${release}/main/installer-${arch}/${version}/images/netboot/${link}debian-installer/${arch}/linux initrd=initrd.gz ${kp}
initrd ${ds}/kali/dists/kali-${release}/main/installer-${arch}/${version}/images/netboot/${link}debian-installer/${arch}/initrd.gz
boot
#################################################
:Arch

set ds1 http://mirrors.evowise.com
set ds2 http://hkg.mirror.rackspace.com
set ds3 http://mirrors.cat.net
set ds4 http://mirror.cedille.club
set ds5 https://mirrors.tuna.tsinghua.edu.cn

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item 5 ${ds5}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:Arch_manual
echo Mirror List: https://archlinux.org/mirrorlist/
echo
set ds https://mirrors.tuna.tsinghua.edu.cn
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Arch_stage2
echo Option Installation Script:
echo http://hkkitlee.ddns.net:8999/arch-installer.sh 
set is http://hkkitlee.ddns.net:8999/arch-installer.sh
echo -n Select installation script: ${}
read is
echo

set kp ip=dhcp archiso_http_srv=${ds}/archlinux/iso/latest/
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo


kernel ${ds}/archlinux/iso/latest/arch/boot/x86_64/vmlinuz-linux vmlinuz-linux initrd=amd-ucode.img initrd=intel-ucode.img initrd=initramfs-linux.img ${kp} script=${is} checksum
initrd ${ds}/archlinux/iso/latest/arch/boot/x86_64/initramfs-linux.img
initrd ${ds}/archlinux/iso/latest/arch/boot/amd-ucode.img
initrd ${ds}/archlinux/iso/latest/arch/boot/intel-ucode.img
boot
#################################################
:Tinycore

set ds1 http://tinycorelinux.net
set ds2 http://mirrors.163.com/tinycorelinux
set ds3 http://mirror.cpsc.ucalgary.ca/mirror/tinycorelinux
set ds4 https://mirrors.tuna.tsinghua.edu.cn/tinycorelinux

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Tinycore_manual
echo Mirror List: https://www.linuxsecrets.com/tinycorelinux-wiki/wiki:mirrors.html
echo
set ds https://mirrors.tuna.tsinghua.edu.cn/tinycorelinux
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Tinycore_stage2
set version 13
echo -n 2-13 version: ${}
read version
echo

set kp loglevel=3 vga=791 base norestore 
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

cpuid --ext 29 && set arch x86_64 || set arch x86
cpuid --ext 29 && set file1 64 ||


kernel ${ds}/${version}.x/${arch}/release/distribution_files/vmlinuz${file1} initrd=modules${file1}.gz initrd=rootfs${file1}.gz ${kp} 
initrd ${ds}/${version}.x/${arch}/release/distribution_files/modules${file1}.gz
initrd ${ds}/${version}.x/${arch}/release/distribution_files/rootfs${file1}.gz


boot
#################################################
:Alpine
set ds1 http://mirrors.tuna.tsinghua.edu.cn/alpine/
set ds2 http://mirrors.ustc.edu.cn/alpine/
set ds3 http://mirror.xtom.com.hk/alpine/
set ds4 http://mirror.csclub.uwaterloo.ca/alpine/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Alpine_manual
echo Mirror List: https://mirrors.alpinelinux.org/
echo
set ds http://mirrors.tuna.tsinghua.edu.cn/alpine/
echo -n Manual Entry ${target} URL: ${}
read ds                                                                         
echo
goto ${target}_stage2

:Alpine_stage2
set version latest-stable 
echo -n Version: v3.0-v3.15.3, latest-stable  version: ${}                                                      
read version                                                                    
echo

clear start_sshd
echo -n Enter url to ssh key:${}
read ssh_key
isset ${ssh_key} && set start_sshd yes || set start_sshd no
iseq ${start_sshd} yes && set ssh_key ssh_key=${ssh_key} || clear ssh_key

set flavor lts
echo -n Options: lts, virt: ${}                                                          
read flavor                                                                     
echo

cpuid --ext 29 && set arch x86_64 || set arch x86
iseq ${arch} x86_64 && set console ttyS1,115200n8 ||

set kp modules=loop,squashfs quiet nomodeset alpine_repo=${ds}v${version}/main modloop=${ds}/${version}/releases/${arch}/netboot/modloop-${flavor} ${ssh_key} ${console}
echo -n Kernel Parameter, Bootcode: ${}                                         
read kp                                                                         
echo 



kernel ${ds}/${version}/releases/${arch}/netboot/vmlinuz-${flavor} initrd=initramfs-${flavor} ${kp}
initrd ${ds}/${version}/releases/${arch}/netboot/initramfs-${flavor}

boot
#################################################
:Slitaz

menu ${target} Version
item    --key a offical_Slitaz			(A) Offical Slitaz
item    --key b teasiu_Slitaz			(B) Teasiu Slitaz
choose target_Slitaz && goto ${target_Slitaz}


:offical_Slitaz
set ds1 ${mirror0}slitaz/
set ds2 ${sourceforge}slitaz/
set ds3 ${sourceforge1}slitaz/
set ds4 ${mirror1}slitaz/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 3 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto offical_${target}_manual || set ds ${ds${siteno}} && goto offical_${target}_stage2

:offical_Slitaz_manual
set ds ${mirror0}slitaz/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto offical_${target}_stage2

:offical_Slitaz_stage2
iseq ${ds} ${sourceforge}slitaz/ && set link ?viasf=1 ||

set bit 64
echo -n Kernel [32 / 64]: ${}                                                         
read bit                                                                              
echo
iseq ${bit} 64 && set bit 64 || set bit  

set kp root=/dev/null nomodeset laptop video=-32 autologin
echo -n Kernel Parameter, Bootcode: ${}                                               
read kp                                                                               
echo

kernel --name bzImage${bit} --timeout 100000 ${ds}boot/bzImage${bit}${link} initrd=rootfs1.gz${bit} initrd=rootfs2.gz initrd=rootfs3.gz initrd=rootfs4.gz initrd=rootfs5.gz ${kp}
initrd --name rootfs1.gz${bit} --timeout 100000 ${ds}boot/rootfs1.gz${bit}${link}
initrd --name rootfs2.gz --timeout 100000 ${ds}boot/rootfs2.gz${link}
initrd --name rootfs3.gz --timeout 100000 ${ds}boot/rootfs3.gz${link}
initrd --name rootfs4.gz --timeout 100000 ${ds}boot/rootfs4.gz${link}
initrd --name rootfs5.gz --timeout 100000 ${ds}boot/rootfs5.gz${link}
boot


:teasiu_Slitaz

set ds1 http://ecoo.top:8083/dl/slitaz/
set ds2 http://www.slitaz.cn:8083/dl/slitaz/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto teasiu_${target}_manual || set ds ${ds${siteno}} && goto teasiu_${target}_stage2

:teasiu_Slitaz_manual
set ds http://www.slitaz.cn:8083/dl/slitaz/
echo -n Manual Entry ${target} URL: ${}
read ds                                                                         
echo
goto teasiu_Slitaz_stage2

:teasiu_Slitaz_stage2
set bit 64                                                                           
echo -n Kernel [32 / 64]: ${}                                                                           
read bit                                                                                                           
echo
iseq ${bit} 64 && set path 64 || set path 32
iseq ${bit} 64 && set kernel bzImage64 || set kernel bzImage

set kp rw root=/dev/null lang=zh_CN kmap=us autologin modprobe=nvidia nomodeset laptop
echo -n Kernel Parameter, Bootcode: ${}                                                                           
read kp                                                                                                           
echo 

kernel ${ds}/iso/rolling/boot${path}/${kernel} initrd=rootfs.gz ${kp}
initrd ${ds}/iso/rolling/boot${path}/rootfs.gz
boot
#################################################
:openSUSE
set ds1 http://mirrors.tuna.tsinghua.edu.cn/opensuse/
set ds2 https://mirror.bjtu.edu.cn/opensuse/
set ds3 http://mirrors.ustc.edu.cn/opensuse/
set ds4 http://download.opensuse.org/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2



:openSUSE_manual
echo Mirror List: https://mirrors.opensuse.org/
echo
set ds http://mirrors.tuna.tsinghua.edu.cn/opensuse/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:openSUSE_stage2
set release tumbleweed
echo -n Release (tumbleweed, stable, current, leap): ${}
read release
echo
iseq ${release} tumbleweed && set release tumbleweed ||
iseq ${release} stable && set release distribution/openSUSE-stable ||
iseq ${release} current && set release distribution/openSUSE-current ||
iseq ${release} leap && set version 15.4 && echo -n Version (15.0 - 15.4): ${} && read version && set release distribution/leap/${version} ||
echo

cpuid --ext 29 && set bit x86_64 || set bit i386

set kp root=/dev/ram0 load_ramdisk=1 splash=silent vga=0x314 showopts install=${ds}${release}/repo/oss/
echo -n Kernel Parameter, Bootcode: ${}                                                                           
read kp                                                                                                           
echo

kernel ${ds}${release}/repo/oss/boot/${bit}/loader/linux initrd=initrd ${kp}
initrd ${ds}${release}/repo/oss/boot/${bit}/loader/initrd
boot
#################################################
:Slax-old

set ds1 http://ftp.sh.cvut.cz
set ds2 http://ftp.linux.cz/pub/linux

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Slax-old_manual
set ds http://ftp.sh.cvut.cz
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Slax-old_stage2
echo Slax Server is slow 
echo
set mainv 9
echo -n Main Version : ${}                                                                                   
read mainv                                                                                                       

set subv 11.0
echo -n Sub Version : ${}                                                                                        
read subv                                                                                                        
echo

set kp vga=normal load_ramdisk=1 prompt_ramdisk=0 rw printk.time=0 consoleblank=0 nocd nohd
echo -n Kernel Parameter, Bootcode: ${}                                                                           
read kp                                                                                                           
echo 

cpuid --ext 29 && set bit 64 || set bit 32
kernel ${ds}/slax/Slax-${mainv}.x/ipxe/${mainv}.${subv}/${bit}bit/vmlinuz initrd=initrfs.img slax.flags=toram ${kp} from=${ds}/slax/Slax-${mainv}.x/slax-${bit}bit-${mainv}.${subv}.iso
initrd ${ds}/slax/Slax-${mainv}.x/ipxe/${mainv}.${subv}/${bit}bit/initrfs.img 
boot
#################################################
:IPFire

set ds1 https://downloads.ipfire.org/
set ds2 http://ftp.fau.de/ipfire/
set ds3 http://mirror.csclub.uwaterloo.ca/ipfire/
set ds4 http://ftp.yz.yamagata-u.ac.jp/pub/network/security/ipfire/
set ds5 http://mirror.aarnet.edu.au/pub/ipfire/
set ds6 http://hammurabi.acc.umu.se/mirror/ipfire.org/
set ds7 http://cdimage.debian.org/mirror/ipfire.org/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item 5 ${ds5}
item 6 ${ds6}
item 7 ${ds7}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:IPFire_manual
echo Mirror List: https://mirrors.ipfire.org/
echo
set ds http://ftp.yz.yamagata-u.ac.jp/pub/network/security/ipfire/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:IPFire_stage2
set mainv ipfire-2.x
echo -n Main Version: ${}
read mainv
echo

set subv 2.27-core166
echo -n Sub Version: ${}
read subv
echo

cpuid --ext 29 && set bit x86_64 || set bit i586

set kp vga=791
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel ${ds}/releases/${mainv}/${subv}/images/${bit}/vmlinuz initrd=instroot ${kp}
initrd ${ds}/releases/${mainv}/${subv}/images/${bit}/instroot
boot
#################################################
:Slackware

set ds1 http://ftp.linux.cz/pub/linux/slackware/
set ds2 http://ftp.nara.wide.ad.jp/pub/Linux/slackware/
set ds3 https://mirror.csclub.uwaterloo.ca/slackware/
set ds4 https://mirror.its.dal.ca/slackware/
set ds5 https://hkg.mirror.rackspace.com/slackware/
set ds6 https://mirror-hk.koddos.net/slackware/
set ds7 https://mirrors.bfsu.edu.cn/slackware/
set ds8 https://mirrors.tuna.tsinghua.edu.cn/slackware/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item 5 ${ds5}
item 6 ${ds6}
item 7 ${ds7}
item 8 ${ds8}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Slackware_manual
echo Mirror List: https://mirrors.slackware.com/mirrorlist/
echo
set ds https://mirrors.tuna.tsinghua.edu.cn/slackware/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Slackware_stage2
set version current
echo -n 13.0 - current Version: ${}
read version
echo

set huge huge.s
echo Symmetrical Multi-Processing, No need to set on x86-64
echo Only need on very old Generic Kernel (i386)
echo -n hugesmp.s/huge.s: ${}
read huge
echo

cpuid --ext 29 && set bit slackware64 || set bit slackware

set kp load_ramdisk=1 prompt_ramdisk=0 rw printk.time=0 SLACK_KERNEL=${huge}
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

cpuid --ext 29 && set huge huge.s || echo -n Generic Kernels keeps ${huge}

kernel ${ds}/${bit}-${version}/kernels/${huge}/bzImage initrd=initrd.img ${kp}
initrd ${ds}/${bit}-${version}/isolinux/initrd.img
boot
#################################################
:Rancheros

set ds1 http://releases.rancher.com/os/latest

menu Sites boot ${target} from:
item 1 ${ds1}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:Rancheros_manual
echo Howto: https://www.vultr.com/docs/install-rancher-os-via-ipxe
echo
set ds http://releases.rancher.com/os/latest
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Rancheros_stage2
set passwd temppasswd
echo -n Temporary password: ${}
read passwd
echo

set kp rancher.state.dev=LABEL=RANCHER_STATE rancher.password=${passwd} rancher.cloud_init.datasources=[url:http://example.com/cloud-config] rancher.autologin=tty1
echo -n Kernel Parameter, Bootcode: ${}                                                                           
read kp                                                                                                           
echo  

kernel ${ds}/vmlinuz initrd=initrd ${kp}
initrd ${ds}/initrd
boot
#################################################
:X-wrt

set ds1 https://downloads.x-wrt.com/rom/

menu Sites boot ${target} from:
item 1 ${ds1}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:X-wrt_manual
set ds https://downloads.x-wrt.com/rom/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:X-wrt_stage2
echo Source: https://downloads.x-wrt.com/rom/
echo Howto: https://blog.x-wrt.com/docs/install-on-vps2/
echo

set kname x-wrt-9.0-b202106212213-x86-64-generic-initramfs-kernel.bin
echo -n Kernel name: ${}
read kname
echo

echo SSID:X-WRT_XXXX Wifi passwd:88888888
echo Web index:http://192.168.15.1/
echo Username/Passwd:root/admin

kernel ${ds}${kname}
boot
#################################################
:Devuan


set ds1 https://pkgmaster.devuan.org/devuan

menu Sites boot ${target} from:
item 1 ${ds1}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Devuan_manual
set ds https://pkgmaster.devuan.org/devuan
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Devuan_stage2
set releases chimaera
echo -n Releases (jessie,ascii,beowulf,chimaera): ${}
read releases
echo

set version current
echo -n Version: ${}
read version
echo

set interface gtk
echo -n Devuan installer interface (tui, gtk): ${}
read interface
echo

iseq ${interface} gtk && set link gtk/ || set link

cpuid --ext 29 && set bit amd64 || set bit i386

set kp vga=788
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo
kernel ${ds}/dists/${releases}/main/installer-${bit}/${version}/images/netboot/${link}debian-installer/${bit}/linux initrd=initrd.gz ${kp}
initrd ${ds}/dists/${releases}/main/installer-${bit}/${version}/images/netboot/${link}debian-installer/${bit}/initrd.gz
boot
#################################################
:Mageia

set ds1 https://free.nchc.org.tw/mageia/
set ds2 https://mirrors.tuna.tsinghua.edu.cn/mageia/
set ds3 https://mirrors.ustc.edu.cn/mageia/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:Mageia_manual
echo Mirror List: https://mirrors.mageia.org/
echo
set ds https://mirrors.ustc.edu.cn/mageia/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Mageia_stage2
set version 8
echo -n 6 - 8 Version: ${}
read version
echo

set ramdisk all.rdz
echo -n Driver: all.rdz / all-nonfree.rdz: ${}
read ramdisk
echo

cpuid --ext 29 && set bit x86_64 || set bit i586
cpuid --ext 29 && set path x86_64 || set path i386

set kp vga=788
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel ${ds}distrib/${version}/${bit}/isolinux/${path}/vmlinuz initrd=${ramdisk} ${kp}
initrd ${ds}distrib/${version}/${bit}/isolinux/${path}/${ramdisk}
boot
#################################################
:Alma
set ds1 https://repo.almalinux.org/almalinux/
set ds2 http://mirror.epn.edu.ec/almalinux/ 
set ds3 http://mirror.fem-net.de/almalinux/
set ds4 http://mirror.hahosting.com/almalinux/
set ds5 http://almalinux.japan.crexio.com/almalinux/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item 5 ${ds5}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Alma_manual
echo Mirror List: https://mirrors.almalinux.org/
echo
set ds http://almalinux.japan.crexio.com/almalinux/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Alma_stage2
set version 8
echo -n Version: ${}
read version
echo

set kp inst.gpt ro
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

cpuid --ext 29 && set bit x86_64 ||

kernel ${ds}${version}/BaseOS/${bit}/os/images/pxeboot/vmlinuz initrd=initrd.img ${kp} inst.repo=${ds}${version}/BaseOS/${bit}/os
initrd ${ds}${version}/BaseOS/${bit}/os/images/pxeboot/initrd.img
boot
#################################################
:Containerlinux

set channel stable
echo -n Channel(stable, beta, alpha, edge): ${}
read channel
echo

set ds1 http://${channel}.release.flatcar-linux.net/amd64-usr/current

menu Sites boot ${target} from:
item 1 ${ds1}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Containerlinux_manual
set ds http://${channel}.release.flatcar-linux.net/amd64-usr/current
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Containerlinux_stage2
set kp
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel ${ds}/flatcar_production_pxe.vmlinuz initrd=flatcar_production_pxe_image.cpio.gz ${kp}
initrd ${ds}/flatcar_production_pxe_image.cpio.gz

boot
#################################################
:coreosinstall
set device /dev/vda
echo -n Device Selection: ${}
read device
echo
echo CAUTION!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
echo CAUTION!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
echo CAUTION!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
echo The DEVICE that you entered will be formatted without ANYMORE prompt
echo -n Are you SURE!!!? ( Y / n ):${}
read answer
echo
iseq ${answer} Y && goto coreos || goto start
###
:coreoslive
goto coreos
###
:coreos

set ds1 https://builds.coreos.fedoraproject.org/prod

menu Sites boot Fedora CoreOS from:
item 1 ${ds1}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto coreos_manual || set ds ${ds${siteno}} && goto coreos_stage2

:coreos_manual
set ds https://builds.coreos.fedoraproject.org/prod
echo -n Manual Entry Fodora CoreOS URL: ${}
read ds
echo
goto coreos_stage2

:coreos_stage2
set stream stable
echo -n Stream(stable, testing, next): ${}
read stream
echo

echo https://getfedora.org/en/coreos/
iseq ${stream} stable && set version 33.20210301.3.1 ||
iseq ${stream} testing && set version 33.20210314.2.0 ||
iseq ${stream} next && set version 33.20210315.1.0 ||
echo -n Version: ${}
read version
echo

echo Producing an Ignition File:
echo https://docs.fedoraproject.org/en-US/fedora-coreos/producing-ign/
clear loadconf
set configurl https://example.com/config.ign
echo -n Configurl: ${}
read configurl
isset ${configurl} && set loadconf yes || set loadconf no
iseq ${loadconf} yes && set configurl ignition.config.url=${configurl} || clear configurl
echo

set path /streams/${stream}/builds/${version}/x86_64

iseq ${target} coreosinstall && set kp coreos.inst.install_dev=${device} coreos.inst.stream=${stream} ${configurl} ||
iseq ${target} coreoslive && set kp ip=dhcp rd.neednet=1 ignition.firstboot ignition.platform.id=metal systemd.unified_cgroup_hierarchy=0 ${configurl} ||
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel ${ds}${path}/fedora-coreos-${version}-live-kernel-x86_64 initrd=fedora-coreos-${version}-live-initramfs.x86_64.img coreos.live.rootfs_url=${ds}${path}/fedora-coreos-${version}-live-rootfs.x86_64.img ${kp}
initrd ${ds}${path}/fedora-coreos-${version}-live-initramfs.x86_64.img
boot
#################################################
:Fatdog
set ds1 http://distro.ibiblio.org/fatdog

menu Sites boot ${target} from:
item 1 ${ds1}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Fatdog_manual
set ds http://distro.ibiblio.org/fatdog
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Fatdog_stage2
set release 810
echo -n Release: ${}
read release
echo

set kversion 5.4.7
echo -n Kernel Version: ${}
read kversion
echo

set kp
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel ${ds}/kernels/${release}/vmlinuz-initrd-${kversion} ${kp}
boot
#################################################
:SmeOS

set ds1 http://mirror.canada.pialasse.com/releases/
set ds2 http://distro.ibiblio.org/pub/linux/distributions/smeserver/releases/
set ds3 http://mirrors.misouk.com/smeserver/releases/
set ds4 http://mirror.internode.on.net/pub/smeserver/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:SmeOS_manual
echo Mirror List: http://mirror.contribs.org/mirrors/
echo
set ds http://distro.ibiblio.org/pub/linux/distributions/smeserver/releases/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:SmeOS_stage2
set release 10
echo -n Release (9, 9.2, 10, 10.0, testing/10.0.rc1) : ${}
read release
echo

set kp sme
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel ${ds}${release}/smeos/x86_64/images/pxeboot/vmlinuz initrd=initrd.img ${kp} inst.repo=${ds}${release}/smeos/x86_64/
initrd ${ds}${release}/smeos/x86_64/images/pxeboot/initrd.img
boot
#################################################
:openEuler
set ds1 https://mirrors.tuna.tsinghua.edu.cn/openeuler/
set ds2 https://mirrors.huaweicloud.com/openeuler/
set ds3 https://mirror.nju.edu.cn/openeuler/
set ds4 http://mirrors.hit.edu.cn/openeuler/
set ds5 https://mirror.truenetwork.ru/openeuler/
set ds6 http://mirror.lzu.edu.cn/openeuler/
set ds7 https://repo.openeuler.org/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item 5 ${ds5}
item 6 ${ds6}
item 7 ${ds7}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:openEuler_manual
echo Mirror List: https://openeuler.org/zh/mirror/list/
echo
set ds http://mirror.lzu.edu.cn/openeuler/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:openEuler_stage2
set version 21.03
echo -n Version (20.03-LTS, 20.03-LTS-SP1, 20.09, 21.03): ${}
read version
echo

set kp inst.gpt quiet
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel ${ds}openEuler-${version}/everything/x86_64/images/pxeboot/vmlinuz initrd=initrd.img inst.repo=${ds}openEuler-${version}/everything/x86_64/ ${kp}
initrd ${ds}openEuler-${version}/everything/x86_64/images/pxeboot/initrd.img
boot
#################################################
:CentOS
set ds1 http://mirrors.ustc.edu.cn/centos/
set ds2 http://mirrors.huaweicloud.com/centos/
set ds3 http://ftp.sjtu.edu.cn/centos/
set ds4 http://hk.mirrors.thegigabit.com/centos/
set ds5 http://mirrors.tuna.tsinghua.edu.cn/centos/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item 5 ${ds5}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:CentOS_manual
set ds http://mirrors.tuna.tsinghua.edu.cn/centos/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:CentOS_stage2
set version 8
echo -n Version: ${}
read version
echo

set kp inst.gpt quiet
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel ${ds}${version}/BaseOS/x86_64/os/images/pxeboot/vmlinuz initrd=initrd.img inst.repo=${ds}${version}/BaseOS/x86_64/os ${kp}
initrd ${ds}${version}/BaseOS/x86_64/os/images/pxeboot/initrd.img
boot
#################################################
:CloudLinuxOS
set ds1 https://repo.cloudlinux.com/cloudlinux/

menu Sites boot ${target} from:
item 1 ${ds1}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:CloudLinuxOS_manual
set ds https://repo.cloudlinux.com/cloudlinux/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:CloudLinuxOS_stage2
set version 8
echo -n Cloud Linux installer Version (5 - 8): ${}
read version
echo

set kp ro ip=dhcp inst.gpt
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel ${ds}${version}/install/x86_64/os/images/pxeboot/vmlinuz initrd=initrd.img ${kp} inst.repo=${ds}${version}/install/x86_64/os
initrd ${ds}${version}/install/x86_64/os/images/pxeboot/initrd.img
boot
#################################################
:Absolute
set ds1 https://www.absolutelinux.org/ftp/
set ds2 https://slackware.uk/absolute/
set ds3 http://mirrors.standaloneinstaller.com/absolutelinux/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Absolute_manual
set ds https://www.absolutelinux.org/ftp/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Absolute_stage2
set version absolute-current64
echo -n Absolute Linux Version : ${}
read version
echo

set kp load_ramdisk=1 prompt_ramdisk=0 rw printk.time=0 nomodeset SLACK_KERNEL=huge.s
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel ${ds}${version}/kernels/huge.s/bzImage initrd=initrd.img ${kp}
initrd ${ds}${version}/isolinux/initrd.img
boot
#################################################
:PureOS
set ds1 https://mirrors.sonic.net/pureos/repo/pureos/
set ds2 https://mirrors.jevincanders.net/pureos/repo/pureos/
set ds3 http://mirror.linux.pizza/pureos/
set ds4 https://repo.puri.sm/pureos/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:PureOS_manual
echo Mirror List: https://tracker.pureos.net/w/installation_guide/mirrors/
set ds http://mirror.linux.pizza/pureos/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:PureOS_stage2
set release green
echo -n Release : ${}
read release
echo

set version current
echo -n PureOS Linux Version : ${}
read version
echo

set interface gtk
echo -n PureOS installer interface (tui, gtk): ${}
read interface
echo

set kp
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

iseq ${interface} gtk && set link gtk/ || set link

kernel ${ds}dists/${release}/main/installer-amd64/${version}/images/netboot/${link}debian-installer/amd64/linux initrd=initrd.gz ${kp}
initrd ${ds}dists/${release}/main/installer-amd64/${version}/images/netboot/${link}debian-installer/amd64/initrd.gz
boot
#################################################
:Springdale
set ds1 http://mirror.math.princeton.edu/pub/springdale/Springdale/
set ds2 http://ftp.halifax.rwth-aachen.de/puias/
set ds3 http://springdale.princeton.edu/data/springdale/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Springdale_manual
echo Mirror List: http://springdale.math.ias.edu/
echo
set ds http://mirror.math.princeton.edu/pub/springdale/Springdale/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Springdale_stage2
set version 8
echo -n Springdale installer Version (6-8): ${}
read version
echo

set kp ro ip=dhcp inst.gpt
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel ${ds}${version}/x86_64/os/images/pxeboot/vmlinuz initrd=initrd.img inst.repo=${ds}${version}/x86_64/os ${kp}
initrd ${ds}${version}/x86_64/os/images/pxeboot/initrd.img
boot
#################################################
:ClearOS
set ds1 http://mirror1-singapore.clearos.com/clearos/
set ds2 http://mirror2-singapore.clearos.com/clearos/
set ds3 http://www.mirrorservice.org/sites/clearfoundation.com/
set ds4 http://mirror1-newyork.clearos.com/clearos/
set ds5 http://mirror1-sanfrancisco.clearos.com/clearos/


menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item 5 ${ds5}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:ClearOS_manual
echo Mirror List: http://mirror.clearos.com/mirrorlist/
echo
set ds http://mirror1-singapore.clearos.com/clearos/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:ClearOS_stage2
set version 7
echo -n ClearOS installer Version : ${}
read version
echo

set kp ro ip=dhcp inst.gpt
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel ${ds}${version}/os/x86_64/images/pxeboot/vmlinuz initrd=initrd.img inst.repo=${ds}${version}/os/x86_64 ${kp}
initrd ${ds}${version}/os/x86_64/images/pxeboot/initrd.img
boot
#################################################
:OneFileLinux
set ds1 ${mirror0}
set ds2 ${sourceforge}
set ds3 ${sourceforge1}
set ds4 ${mirror1}

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:OneFileLinux_manual
echo https://github.com/zhovner/OneFileLinux
echo
set ds ${mirror0}
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:OneFileLinux_stage2
iseq ${ds} ${sourceforge} && set link ?viasf=1 ||
kernel --name OneFileLinux.efi --timeout 100000 ${ds}OneFileLinux.efi${link}
boot
#################################################
:SteamOS
set ds1 http://repo.steampowered.com/steamos/
set ds2 https://mirrors.nju.edu.cn/steamos/steamos/
set ds3 https://mirrors.tuna.tsinghua.edu.cn/steamos/steamos/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:SteamOS_manual
echo Mirror List: https://www.debian.org/mirror/list
echo
set ds https://mirrors.tuna.tsinghua.edu.cn/steamos/steamos/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:SteamOS_stage2
set version brewmaster
echo -n SteamOS installer Version (alchemist, clockwerk, brewmaster): ${}
read version
echo

set interface gtk
echo -n Debian installer interface (tui, gtk): ${}
read interface
echo


echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

iseq ${interface} gtk && set link gtk/ || set link
cpuid --ext 29 && set arch amd64 || set arch i386


kernel ${ds}dists/${version}/main/installer-${arch}/current/images/netboot/${link}debian-installer/${arch}/linux initrd=initrd.gz ${kp}
initrd ${ds}dists/${version}/main/installer-${arch}/current/images/netboot/${link}debian-installer/${arch}/initrd.gz
boot
#################################################
:Memtest86

set ds1 ${mirror0}
set ds2 http://hkkitlee.ddns.net:8999/
set ds3 ${mirror1}

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:Memtest86_manual
set ds ${mirror0}
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Memtest86_stage2
sanboot --no-describe --drive 0x80 ${ds}Memtest86-7.5.iso
#################################################
:SuperGrub2

set ds1 ${mirror0}
set ds2 http://hkkitlee.ddns.net:8999/
set ds3 ${mirror1}

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:SuperGrub2_manual
set ds ${mirror0}
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:SuperGrub2_stage2
sanboot --no-describe --drive 0x80 ${ds}super_grub2_disk_hybrid_2.04s1.iso
#################################################
:ClearLinux

set ds1 ${sourceforge}clearlinux/
set ds2 ${sourceforge1}clearlinux/
set ds3 ${mirror0}clearlinux/
set ds4 ${mirror1}clearlinux/

menu Sites boot ${target} from:
item --gap -- Howto: https://docs.01.org/clearlinux/latest/get-started/ipxe-install.html#
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:ClearLinux_manual
echo
set ds ${mirror0}clearlinux/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:ClearLinux_stage2
echo Below sample from Clear Linux OS
echo https://cdn.download.clearlinux.org/current/config/image/live-desktop.yaml
echo https://cdn.download.clearlinux.org/current/config/image/live-server.yaml
echo
set config https://cdn.download.clearlinux.org/current/config/image/live-server.yaml
echo -n Please enter your yaml config location: ${}
read config
echo

iseq ${ds} ${sourceforge}clearlinux/ && set link ?viasf=1 ||

set kp init=/usr/lib/systemd/systemd-bootchart initcall_debug tsc=reliable no_timer_check noreplace-smp rw clri.descriptor=${config}
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

set answer n
echo CAUTION!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
echo CAUTION!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
echo CAUTION!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
echo Your computer will be formatted without ANYMORE prompt
echo -n Are you SURE!!!? ( Y / n ):${}
read answer
echo
iseq ${answer} Y && goto clearlinuxinstall || goto start
echo

###
:clearlinuxinstall
kernel --name linux --timeout 100000 ${ds}linux${link} initrd=initrd ${kp}
initrd --name initrd --timeout 100000 ${ds}initrd${link}
boot
#################################################
:BlackArch
set ds1 ${sourceforge}blackarch/
set ds2 ${sourceforge1}blackarch/
set ds3 ${mirror0}blackarch/
set ds4 ${mirror1}blackarch/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:BlackArch_manual
echo Howto: https://blackarch.org/blackarch-install.html
echo
set ds ${mirror0}blackarch/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:BlackArch_stage2
echo Login : root
echo Password : blackarch 
echo Installer script : blackarch-install
echo

iseq ${ds} ${sourceforge}blackarch/ && set link ?viasf=1 ||

set kp ip=dhcp archisobasedir=blackarch archiso_http_srv=${ds} checksum
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name vmlinuz-linux --timeout 100000 ${ds}blackarch/boot/x86_64/vmlinuz-linux${link} initrd=initramfs-linux.img initrd=amd-ucode.img initrd=intel-ucode.img ${kp}
initrd --name initramfs-linux.img --timeout 100000 ${ds}blackarch/boot/x86_64/initramfs-linux.img${link}
initrd --name amd-ucode.img --timeout 100000 ${ds}blackarch/boot/amd-ucode.img${link}
initrd --name intel-ucode.img --timeout 100000 ${ds}blackarch/boot/intel-ucode.img${link}
boot
#################################################
:ProxmoxVE

set ds1 ${sourceforge}proxmox-ve/
set ds2 ${sourceforge1}proxmox-ve/
set ds3 ${mirror0}proxmox-ve/
set ds4 ${mirror1}proxmox-ve/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:ProxmoxVE_manual
set ds ${mirror0}proxmox-ve/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:ProxmoxVE_stage2

iseq ${ds} ${sourceforge}proxmox-ve/ && set link ?viasf=1 ||

echo ramdisk_size value is in kb
set kp ro ramdisk_size=921600 rw splash=verbose
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name linux26 --timeout 100000 ${ds}boot/linux26${link} initrd=initrd.img initrd=proxmox-ve.iso.img ${kp}
initrd --name initrd.img --timeout 100000 ${ds}boot/initrd.img${link}
initrd --name proxmox-ve.iso.img --timeout 100000 ${ds}proxmox-ve.iso.img${link}
boot
#################################################
:Garuda

set ds1 ${sourceforge}garuda/
set ds2 ${sourceforge1}garuda/
set ds3 ${mirror0}garuda/
set ds4 ${mirror1}garuda/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Garuda_manual
set ds ${mirror0}garuda/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Garuda_stage2
echo Login : garuda
echo Password : garuda
echo

iseq ${ds} ${sourceforge}garuda/ && set link ?viasf=1 ||

set kp ip=dhcp misobasedir=garuda miso_http_srv=${ds} driver=free nouveau.modeset=1 i915.modeset=1 radeon.modeset=1 systemd.show_status=1 'apparmor=1' 'security=apparmor' checksum
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name vmlinuz-x86_64 --timeout 100000 ${ds}boot/vmlinuz-x86_64${link} initrd=initramfs-x86_64.img initrd=amd_ucode.img initrd=intel_ucode.img ${kp}
initrd --name initramfs-x86_64.img --timeout 100000 ${ds}boot/initramfs-x86_64.img${link}
initrd --name amd_ucode.img --timeout 100000 ${ds}boot/amd_ucode.img${link}
initrd --name intel_ucode.img --timeout 100000 ${ds}boot/intel_ucode.img${link}
boot
#################################################
:Oracle8
set ds1 ${sourceforge}oracle8/
set ds2 ${sourceforge1}oracle8/
set ds3 ${mirror0}oracle8/
set ds4 ${mirror1}oracle8/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Oracle8_manual
set ds ${mirror0}oracle8/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Oracle8_stage2
iseq ${ds} ${sourceforge}oracle8/ && set link ?viasf=1 ||

set kp ro ip=dhcp inst.gpt inst.stage2.all inst.repo=https://yum.oracle.com/repo/OracleLinux/OL8/baseos/latest/x86_64/ inst.stage2=${ds}
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

initrd --name initrd.img --timeout 100000 ${ds}images/pxeboot/initrd.img${link}
kernel --name vmlinuz --timeout 100000 ${ds}images/pxeboot/vmlinuz${link} initrd=initrd.img ${kp}
boot
#################################################
:Manjaro-Xfce

set ds1 ${sourceforge}manjaro-xfce/
set ds2 ${sourceforge1}manjaro-xfce/
set ds3 ${mirror0}manjaro-xfce/
set ds4 ${mirror1}manjaro-xfce/


menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Manjaro-Xfce_manual
set ds ${mirror0}manjaro-xfce/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Manjaro-Xfce_stage2
iseq ${ds} ${sourceforge}manjaro-xfce/ && set link ?viasf=1 ||

set kp ip=dhcp misobasedir=manjaro miso_http_srv=${ds} driver=free nouveau.modeset=1 i915.modeset=1 radeon.modeset=1
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name vmlinuz-x86_64 --timeout 100000 ${ds}boot/vmlinuz-x86_64${link} initrd=initramfs-x86_64.img initrd=amd_ucode.img initrd=intel_ucode.img ${kp}
initrd --name initramfs-x86_64.img --timeout 100000 ${ds}boot/initramfs-x86_64.img${link}
initrd --name amd_ucode.img --timeout 100000 ${ds}boot/amd_ucode.img${link}
initrd --name intel_ucode.img --timeout 100000 ${ds}boot/intel_ucode.img${link}
boot
#################################################
:Gentoo-Minimal

set ds1 ${sourceforge}gentoo-minimal/
set ds2 ${sourceforge1}gentoo-minimal/
set ds3 ${mirror0}gentoo-minimal/
set ds4 ${mirror1}gentoo-minimal/

menu Sites boot ${target} from:
item --gap -- https://www.unixmen.com/a-beginners-guide-to-install-gentoo/
item --gap -- https://wiki.gentoo.org/wiki/Handbook:X86/Full/Installation#Minimal_installation_CD
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Gentoo-Minimal_manual
set ds ${mirror0}gentoo-minimal/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Gentoo-Minimal_stage2
iseq ${ds} ${sourceforge}gentoo-minimal/ && set link ?viasf=1 ||

set kp root=/dev/ram0 init=/linuxrc dokeymap looptype=squashfs loop=/image.squashfs cdroot vga=791
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name gentoo --timeout 100000 ${ds}boot/gentoo${link} initrd=gentoo.igz initrd=image.squashfs.img ${kp}
initrd --name gentoo.igz --timeout 100000 ${ds}boot/gentoo.igz${link}
initrd --name image.squashfs.img --timeout 100000 ${ds}image.squashfs.img${link}
boot
#################################################
:Rocky

set ds1 http://download.rockylinux.org/pub/rocky/
set ds2 https://mirrors.rit.edu/rocky/

menu Sites boot ${target} from:
item 1 ${ds1}
item 1 ${ds2}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:Rocky_manual
set ds http://download.rockylinux.org/pub/rocky/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Rocky_stage2
set version 8
echo -n (8.3, 8(8.4)) Version: ${}
read version
echo


set kp ro ip=dhcp inst.gpt
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel ${ds}${version}/BaseOS/x86_64/os/images/pxeboot/vmlinuz initrd=initrd.img inst.repo=${ds}${version}/BaseOS/x86_64/os ${kp}
initrd ${ds}${version}/BaseOS/x86_64/os/images/pxeboot/initrd.img
boot
#################################################
:Gparted-Live

set ds1 ${sourceforge}gparted-live/
set ds2 ${sourceforge1}gparted-live/
set ds3 ${mirror0}gparted-live/
set ds4 ${mirror1}gparted-live/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Gparted-Live_manual
set ds ${mirror0}gparted-live/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Gparted-Live_stage2
menu iPXE injection to boot ${target}
item    --gap   -- This initrd is not support fetch filesystem.squashfs from https (SourceForge forced to Yes).
item    --gap   -- Do you want to use iPXE injection to boot (Yes/No): ${}
item Y Yes
item n No
choose answer

iseq ${ds} ${sourceforge}gparted-live/ && set link ?viasf=1 && set answer Y ||
iseq ${answer} Y && set img initrd=gparted-live.iso.img && set from fromiso=/gparted-live.iso || set from fetch=${ds}live/filesystem.squashfs

set kp boot=live union=overlay username=user components noeject noswap ethdevice-timeout=60 net.ifnames=0 hooks=filesystem ${from}
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name vmlinuz --timeout 100000 ${ds}live/vmlinuz${link} initrd=initrd.img ${img} ${kp}
initrd --name initrd.img --timeout 100000 ${ds}live/initrd.img${link}
iseq ${answer} Y && initrd --name gparted-live.iso.img --timeout 100000 ${ds}gparted-live.iso.img${link} ||
boot
#################################################
:Clonezilla

set ds1 ${sourceforge}clonezilla/
set ds2 ${sourceforge1}clonezilla/
set ds3 ${mirror0}clonezilla/
set ds4 ${mirror1}clonezilla/

menu Sites boot ${target} from:
item --gap -- Lite Server Mode---https://clonezilla.org/show-live-doc-content.php?topic=clonezilla-live/doc/11_lite_server
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Clonezilla_manual
set ds ${mirror0}clonezilla/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Clonezilla_stage2
menu iPXE injection to boot ${target}
item    --gap   -- This initrd is not support fetch filesystem.squashfs from https (SourceForge forced to Yes).
item    --gap   -- Do you want to use iPXE injection to boot (Yes/No): ${}
item Y Yes
item n No
choose answer

 iseq ${ds} ${sourceforge}clonezilla/ && set link ?viasf=1 && set answer Y ||
iseq ${answer} Y && set img initrd=clonezilla.iso.img && set from fromiso=/clonezilla.iso || set from fetch=${ds}live/filesystem.squashfs

set kp enforcing=0 username=user ocs_live_run="ocs-live-general" ocs_live_extra_param="" ocs_live_batch="no" vga=788 edd=on nomodeset 
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name vmlinuz --timeout 100000 ${ds}live/vmlinuz${link} initrd=initrd.img boot=live union=overlay ${img} ${kp} config components noeject hooks=filesystem ${from}
initrd --name initrd.img --timeout 100000 ${ds}live/initrd.img${link}
iseq ${answer} Y && initrd --name clonezilla.iso.img --timeout 100000 ${ds}clonezilla.iso.img${link} ||
boot
#################################################
:RedoRescue

set ds1 ${sourceforge}redorescue/
set ds2 ${sourceforge1}redorescue/
set ds3 ${mirror0}redorescue/
set ds4 ${mirror1}redorescue/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:RedoRescue_manual
set ds ${mirror0}redorescue/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:RedoRescue_stage2
menu iPXE injection to boot ${target}
item    --gap   -- This initrd is not support fetch filesystem.squashfs from https (SourceForge forced to Yes).
item    --gap   -- Do you want to use iPXE injection to boot (Yes/No): ${}
item Y Yes
item n No
choose answer

iseq ${ds} ${sourceforge}redorescue/ && set link ?viasf=1 && set answer Y ||
iseq ${answer} Y && set img initrd=redorescue.iso.img && set from fromiso=/redorescue.iso || set from fetch=${ds}live/filesystem.squashfs

set kp boot=live union=overlay username=user vga=791 quiet splash setkmap=us ${from}
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name vmlinuz --timeout 100000 ${ds}vmlinuz${link} initrd=initrd ${img} ${kp}
initrd --name initrd --timeout 100000 ${ds}initrd${link}
iseq ${answer} Y && initrd --name redorescue.iso.img --timeout 100000 ${ds}redorescue.iso.img${link} ||
boot
#################################################
:PartedMagic
set ds1 ${sourceforge}pmagic/
set ds2 ${sourceforge1}pmagic/
set ds3 ${mirror0}pmagic/
set ds4 ${mirror1}pmagic/

menu Sites boot ${target} from:
item --gap -- Howto: https://partedmagic.com/pxe/
item --gap -- Script: boot/pxelinux/pm2pxe.sh
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:PartedMagic_manual
set ds ${mirror0}pmagic/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:PartedMagic_stage2
iseq ${ds} ${sourceforge}pmagic/ && set link ?viasf=1 ||

set kp edd=on vga=normal boot=live eject=no
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name bzImage --timeout 100000 ${ds}pmagic/bzImage${link} linux26 initrd=initrd.img initrd=fu.img initrd=m.img initrd=files.cgz ${kp}
initrd --name initrd.img --timeout 1000000 ${ds}pmagic/initrd.img${link}
initrd --name fu.img --timeout 1000000 ${ds}pmagic/fu.img${link}
initrd --name m.img --timeout 1000000 ${ds}pmagic/m.img${link}
initrd --name files.cgz --timeout 1000000 ${ds}pmagic/files.cgz${link}
boot

#################################################
:ProxmoxBackup

set ds1 ${sourceforge}proxmox-backup/
set ds2 ${sourceforge1}proxmox-backup/
set ds3 ${mirror0}proxmox-backup/
set ds4 ${mirror1}proxmox-backup/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:ProxmoxBackup_manual
set ds ${mirror0}proxmox-backup/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:ProxmoxBackup_stage2

iseq ${ds} ${sourceforge}proxmox-backup/ && set link ?viasf=1 ||

echo ramdisk_size value is in kb
set kp ro ramdisk_size=921600 rw splash=verbose
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name linux26 --timeout 100000 ${ds}boot/linux26${link} initrd=initrd.img initrd=proxmox-backup-server.iso.img ${kp}
initrd --name initrd.img --timeout 100000 ${ds}boot/initrd.img${link}
initrd --name proxmox-backup-server.iso.img --timeout 100000 ${ds}proxmox-backup-server.iso.img${link}
boot
#################################################
:ProxmoxMailGateway
set ds1 ${sourceforge}proxmox-mailgateway/
set ds2 ${sourceforge1}proxmox-mailgateway/
set ds3 ${mirror0}proxmox-mailgateway/
set ds4 ${mirror1}proxmox-mailgateway/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:ProxmoxMailGateway_manual
set ds ${mirror0}proxmox-mailgateway/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:ProxmoxMailGateway_stage2

iseq ${ds} ${sourceforge}proxmox-mailgateway/ && set link ?viasf=1 ||

echo ramdisk_size value is in kb
set kp ro ramdisk_size=921600 rw splash=verbose
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name linux26 --timeout 100000 ${ds}boot/linux26${link} initrd=initrd.img initrd=proxmox-mailgateway.iso.img ${kp}
initrd --name initrd.img --timeout 100000 ${ds}boot/initrd.img${link}
initrd --name proxmox-mailgateway.iso.img --timeout 100000 ${ds}proxmox-mailgateway.iso.img${link}
boot
#################################################
:UbuntuKylin
set ds1 ${sourceforge}ubuntukylin/
set ds2 ${sourceforge1}ubuntukylin/
set ds3 ${mirror0}ubuntukylin/
set ds4 ${mirror1}ubuntukylin/

menu Sites boot ${target} from:
item --gap -- http://releases.ubuntu.com/
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:UbuntuKylin_manual
set ds ${mirror0}ubuntukylin/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:UbuntuKylin_stage2

iseq ${ds} ${sourceforge}ubuntukylin/ && set link ?viasf=1 ||

echo ramdisk_size value is in kb
set kp root=/dev/ram0 ramdisk_size=3072000 ip=dhcp locale=zh_CN keyboard-configuration/layoutcode?=cn url=${ds}ubuntukylin.iso
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name vmlinuz --timeout 100000 ${ds}casper/vmlinuz${link} initrd=initrd ${kp}
initrd --name initrd --timeout 100000 ${ds}casper/initrd${link}

boot

#################################################
:Ubuntu-Live
set ds1 ${sourceforge}ubuntu-live/
set ds2 ${sourceforge1}ubuntu-live/
set ds3 ${mirror0}ubuntu-live/
set ds4 ${mirror1}ubuntu-live/

menu Sites boot ${target} from:
item --gap -- http://releases.ubuntu.com/
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:Ubuntu-Live_manual
set ds ${mirror0}ubuntu-live/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Ubuntu-Live_stage2

iseq ${ds} ${sourceforge}ubuntu-live/ && set link ?viasf=1 ||

echo ramdisk_size value is in kb
set kp root=/dev/ram0 ramdisk_size=3072000 ip=dhcp locale=zh_CN keyboard-configuration/layoutcode?=cn url=${ds}ubuntu.iso
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name vmlinuz --timeout 100000 ${ds}casper/vmlinuz${link} initrd=initrd ${kp}
initrd --name initrd --timeout 100000 ${ds}casper/initrd${link}

boot

#################################################
:VzLinux8
set ds1 ${sourceforge}vzlinux8/
set ds2 ${sourceforge1}vzlinux8/
set ds3 ${mirror0}vzlinux8/
set ds4 ${mirror1}vzlinux8/

menu Sites boot ${target} from:
item	--gap	--	http://repo.virtuozzo.com/vzlinux/8/iso/vzlinux-8-min.iso
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:VzLinux8_manual
set ds ${mirror0}vzlinux8/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:VzLinux8_stage2
iseq ${ds} ${sourceforge}vzlinux8/ && set link ?viasf=1 ||

set kp ro ip=dhcp inst.gpt inst.stage2.all inst.repo=http://repo.virtuozzo.com/vzlinux/8/BaseOS/x86_64/os/ inst.stage2=${ds}
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

initrd --name initrd.img --timeout 100000 ${ds}images/pxeboot/initrd.img${link}
kernel --name vmlinuz --timeout 100000 ${ds}images/pxeboot/vmlinuz${link} initrd=initrd.img ${kp}
boot
#################################################
:EuroLinux
set ds1 ${sourceforge}eurolinux/
set ds2 ${sourceforge1}eurolinux/
set ds3 ${mirror0}eurolinux/
set ds4 ${mirror1}eurolinux/

menu Sites boot ${target} from:
item    --gap   --     https://ftp.sh.cvut.cz/slax/Slax-11.x/slax-64bit-11.2.1.iso 
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:EuroLinux_manual
set ds ${mirror0}eurolinux/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:EuroLinux_stage2
iseq ${ds} ${sourceforge}eurolinux/ && set link ?viasf=1 ||

#set kp ro ip=dhcp inst.gpt inst.stage2.all inst.repo=https://fbi.cdn.euro-linux.com/dist/eurolinux/server/8/x86_64/certify-BaseOS/os/ inst.stage2=${ds}
set kp ro ip=dhcp inst.gpt inst.stage2.all inst.repo=https://fbi.cdn.euro-linux.com/dist/eurolinux/server/9/x86_64/certify-beta-BaseOS/os/ inst.stage2=${ds}
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

initrd --name initrd.img --timeout 100000 ${ds}images/pxeboot/initrd.img${link}
kernel --name vmlinuz --timeout 100000 ${ds}images/pxeboot/vmlinuz${link} initrd=initrd.img ${kp}
boot
#################################################
:MLL
set ds1 ${sourceforge}mll/
set ds2 ${sourceforge1}mll/
set ds3 ${mirror0}mll/
set ds4 ${mirror1}mll/

menu Sites boot ${target} from:
item    --gap   --      https://github.com/ivandavidov/minimal
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:MLL_manual
set ds ${mirror0}mll/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:MLL_stage2
iseq ${ds} ${sourceforge}mll/ && set link ?viasf=1 ||

set kp vga=ask
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name kernel.xz --timeout 100000 ${ds}kernel.xz${link} initrd=rootfs.xz ${kp}
initrd --name rootfs.xz --timeout 100000 ${ds}rootfs.xz${link}
boot
#################################################
:Live-Raizo
set ds1 ${sourceforge}live-raizo/
set ds2 ${sourceforge1}live-raizo/
set ds3 ${mirror0}live-raizo/
set ds4 ${mirror1}live-raizo/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:Live-Raizo_manual
set ds ${mirror0}live-raizo/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Live-Raizo_stage2
menu iPXE injection to boot ${target}
item    --gap   -- This initrd is not support fetch filesystem.squashfs from https (SourceForge forced to Yes).
item    --gap   -- Do you want to use iPXE injection to boot (Yes/No): ${}
item Y Yes
item n No
choose answer

iseq ${ds} ${sourceforge}live-raizo/ && set link ?viasf=1 && set answer Y ||
iseq ${answer} Y && set img initrd=Live-Raizo.iso.img && set from fromiso=/Live-Raizo.iso || set from fetch=${ds}live/filesystem.squashfs

set kp boot=live union=overlay components hostname=raizo username=user user-fullname=Live-Raizo-User nox11autologin ip=dhcp ${from}
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name vmlinuz --timeout 100000 ${ds}live/vmlinuz${link} initrd=initrd.img ${img} ${kp}
initrd --name initrd.img --timeout 100000 ${ds}live/initrd.img${link}
iseq ${answer} Y && initrd --name Live-Raizo.iso.img --timeout 100000 ${ds}Live-Raizo.iso.img${link} ||
boot
#################################################
:Amahi
set ds1 ${sourceforge}amahi/
set ds2 ${sourceforge1}amahi/
set ds3 ${mirror0}amahi/
set ds4 ${mirror1}amahi/

menu Sites boot ${target} from:
item	--gap	--	(Installation Code)
item	--gap	--	https://www.amahi.org/signup
item	--gap	--	https://www.amahi.org/login
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Amahi_manual
set ds ${mirror0}amahi/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Amahi_stage2
iseq ${ds} ${sourceforge}amahi/ && set link ?viasf=1 ||

set kp ro ip=dhcp inst.gpt inst.stage2.all inst.stage2=${ds} inst.ks=${ds}ks.cfg
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

initrd --name initrd.img --timeout 100000 ${ds}images/pxeboot/initrd.img${link}
kernel --name vmlinuz --timeout 100000 ${ds}images/pxeboot/vmlinuz${link} initrd=initrd.img inst.updates=${ds}amahi.img ${kp}
boot

#################################################
:SystemRescue

set ds1 ${sourceforge}systemrescue/
set ds2 ${sourceforge1}systemrescue/
set ds3 ${mirror0}systemrescue/
set ds4 ${mirror1}systemrescue/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:SystemRescue_manual
set ds ${mirror0}systemrescue/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:SystemRescue_stage2
iseq ${ds} ${sourceforge}systemrescue/ && set link ?viasf=1 ||

set kp ip=dhcp archisobasedir=sysresccd archiso_http_srv=${ds} checksum
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name vmlinuz --timeout 100000 ${ds}sysresccd/boot/x86_64/vmlinuz${link} initrd=sysresccd.img initrd=amd_ucode.img initrd=intel_ucode.img ${kp}
initrd --name sysresccd.img --timeout 100000 ${ds}sysresccd/boot/x86_64/sysresccd.img${link}
initrd --name amd_ucode.img --timeout 100000 ${ds}sysresccd/boot/amd_ucode.img${link}
initrd --name intel_ucode.img --timeout 100000 ${ds}sysresccd/boot/intel_ucode.img${link}
boot
#################################################
:EndeavourOS

set ds1 ${sourceforge}endeavouros/
set ds2 ${sourceforge1}endeavouros/
set ds3 ${mirror0}endeavouros/
set ds4 ${mirror1}endeavouros/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:EndeavourOS_manual
set ds ${mirror0}endeavouros/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:EndeavourOS_stage2
iseq ${ds} ${sourceforge}endeavouros/ && set link ?viasf=1 ||

set kp ip=dhcp archisobasedir=arch archiso_http_srv=${ds} checksum
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name vmlinuz-linux --timeout 100000 ${ds}arch/boot/x86_64/vmlinuz-linux${link} initrd=initramfs-linux.img initrd=amd-ucode.img initrd=intel-ucode.img ${kp}
initrd --name initramfs-linux.img --timeout 100000 ${ds}arch/boot/x86_64/initramfs-linux.img${link}
initrd --name amd-ucode.img --timeout 100000 ${ds}arch/boot/amd-ucode.img${link}
initrd --name intel-ucode.img --timeout 100000 ${ds}arch/boot/intel-ucode.img${link}
boot

#################################################
:Bluestar

set ds1 ${sourceforge}bluestar/
set ds2 ${sourceforge1}bluestar/
set ds3 ${mirror0}bluestar/
set ds4 ${mirror1}bluestar/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Bluestar_manual
set ds ${mirror0}bluestar/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Bluestar_stage2
iseq ${ds} ${sourceforge}bluestar/ && set link ?viasf=1 ||

set kp ip=dhcp archisobasedir=arch archiso_http_srv=${ds} cow_spacesize=30% cow_label=BSLX_PERSIST ipv6.disable=1 disablehooks=v86d,915resolution,gma3600 modprobe.blacklist=uvesafb console=tty1 checksum
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name vmlinuz --timeout 100000 ${ds}arch/boot/x86_64/vmlinuz${link} initrd=archiso.img initrd=amd_ucode.img initrd=intel_ucode.img ${kp}
initrd --name archiso.img --timeout 100000 ${ds}arch/boot/x86_64/archiso.img${link}
initrd --name amd_ucode.img --timeout 100000 ${ds}arch/boot/amd_ucode.img${link}
initrd --name intel_ucode.img --timeout 100000 ${ds}arch/boot/intel_ucode.img${link}
boot
#################################################
:Grml
set ds1 ${sourceforge}grml/
set ds2 ${sourceforge1}grml/
set ds3 ${mirror0}grml/
set ds4 ${mirror1}grml/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:Grml_manual
set ds ${mirror0}grml/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Grml_stage2
menu ${target} 32/64 bit
item 64 64bit
item 32 32bit
choose bit

menu iPXE injection to boot ${target}
item	--gap	-- This initrd is not support fetch filesystem.squashfs from SourceForge (forced to Yes).
item	--gap	-- Do you want to use iPXE injection to boot (Yes/No): ${}
item Y Yes
item n No
choose answer

iseq ${ds} ${sourceforge}grml/ && set link ?viasf=1 && set answer Y ||
iseq ${answer} Y && set img initrd=grml96-full.iso.img && set from fromiso=/grml96-full.iso || set from fetch=${ds}live/grml${bit}-full/grml${bit}-full.squashfs

set kp boot=live apm=power-off vga=791 nomce net.ifnames=0 ip=dhcp live-media-path=/live/grml${bit}-full/ bootid=2ca46f22-381a-4d24-9c57-b147ddb24540 startx ${from}
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name vmlinuz --timeout 100000 ${ds}boot/grml${bit}full/vmlinuz${link} initrd=initrd.img ${img} ${kp}
initrd --name initrd.img --timeout 100000 ${ds}boot/grml${bit}full/initrd.img${link}
iseq ${answer} Y && initrd --name grml96-full.iso.img --timeout 100000 ${ds}grml96-full.iso.img${link} ||
boot

#################################################
:Linux-Lite
set ds1 ${sourceforge}linux-lite/
set ds2 ${sourceforge1}linux-lite/
set ds3 ${mirror0}linux-lite/
set ds4 ${mirror1}linux-lite/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:Linux-Lite_manual
set ds ${mirror0}linux-lite/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Linux-Lite_stage2

menu iPXE injection to boot ${target}
item    --gap   -- This initrd is not support fetch iso from https (Sourcegorge forced to Yes).
item    --gap   -- Do you want to fetch iso from ${mirror0} to boot (Yes/No)
item Y Yes
item n No
choose answer

iseq ${ds} ${sourceforge}linux-lite/ && set link ?viasf=1 && set answer Y ||
iseq ${answer} Y && set from url=${mirror0}linux-lite/linux-lite.iso || set from url=${ds}linux-lite.iso

set kp boot=casper ip=dhcp ${from}
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name vmlinuz --timeout 100000 ${ds}casper/vmlinuz${link} initrd=initrd.gz ${kp}
initrd --name initrd.gz --timeout 100000 ${ds}casper/initrd.gz${link}
boot
#################################################
:Archman

set ds1 ${sourceforge}archman/
set ds2 ${sourceforge1}archman/
set ds3 ${mirror0}archman/
set ds4 ${mirror1}archman/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:Archman_manual
set ds ${mirror0}archman/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Archman_stage2
set kp ip=dhcp archiso_http_srv=${ds}
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo


kernel ${ds}arch/boot/x86_64/vmlinuz-linux vmlinuz-linux initrd=amd-ucode.img initrd=intel-ucode.img initrd=initramfs-linux.img ${kp} checksum
initrd ${ds}arch/boot/x86_64/initramfs-linux.img
initrd ${ds}arch/boot/amd-ucode.img
initrd ${ds}arch/boot/intel-ucode.img
boot
#################################################
:Mabox

set ds1 ${sourceforge}mabox/
set ds2 ${sourceforge1}mabox/
set ds3 ${mirror0}mabox/
set ds4 ${mirror1}mabox/


menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Mabox_manual
set ds ${mirror0}mabox/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Mabox_stage2
iseq ${ds} ${sourceforge}mabox/ && set link ?viasf=1 ||

set kp ip=dhcp misobasedir=manjaro miso_http_srv=${ds} driver=free nouveau.modeset=1 i915.modeset=1 radeon.modeset=1
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name vmlinuz-x86_64 --timeout 100000 ${ds}boot/vmlinuz-x86_64${link} initrd=initramfs-x86_64.img initrd=amd_ucode.img initrd=intel_ucode.img ${kp}
initrd --name initramfs-x86_64.img --timeout 100000 ${ds}boot/initramfs-x86_64.img${link}
initrd --name amd_ucode.img --timeout 100000 ${ds}boot/amd_ucode.img${link}
initrd --name intel_ucode.img --timeout 100000 ${ds}boot/intel_ucode.img${link}
boot

#################################################
:ArcoLinux

set ds1 ${sourceforge}arco/
set ds2 ${sourceforge1}arco/
set ds3 ${mirror0}arco/
set ds4 ${mirror1}arco/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:ArcoLinux_manual
set ds ${mirror0}arco/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:ArcoLinux_stage2
iseq ${ds} ${sourceforge}arco/ && set link ?viasf=1 ||

set kp ip=dhcp archiso_http_srv=${ds}
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo


kernel --name vmlinuz-linux --timeout 100000 ${ds}arch/boot/x86_64/vmlinuz-linux${link} initrd=amd-ucode.img initrd=intel-ucode.img initrd=initramfs-linux.img ${kp} checksum
initrd --name initramfs-linux.img --timeout 100000 ${ds}arch/boot/x86_64/initramfs-linux.img${link}
initrd --name amd-ucode.img --timeout 100000 ${ds}arch/boot/amd-ucode.img${link}
initrd --name intel-ucode.img --timeout 100000 ${ds}arch/boot/intel-ucode.img${link}
boot
#################################################
:Debian-Live
set ds1 ${sourceforge}debian/
set ds2 ${sourceforge1}debian/
set ds3 ${mirror0}debian/
set ds4 ${mirror1}debian/

menu Kernel boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:Debian-Live_manual
set ds ${mirror1}debian/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2


:Debian-Live_stage2

iseq ${ds} ${sourceforge}debian/ && set link ?viasf=1 ||

set cdds1 https://mirrors.tuna.tsinghua.edu.cn/debian-cd/
set cdds2 https://cdimage.debian.org/debian-cd/
set cdds3 http://ftp.cn.debian.org/debian-cd/

menu ISO boot ${target} from:
item --gap -- https://www.debian.org/mirror/list
item 1 ${cdds1}
item 2 ${cdds2}
item 3 ${cdds3}
item manual Manual Entry URL
choose iso

iseq ${iso} manual && goto ${target}_isomanual || set cdds ${cdds${iso}} && goto ${target}_stage3


:Debian-Live_isomanual
set ds http://ftp.cn.debian.org/debian-cd/
echo -n Manual Entry ${target} ISO URL: ${}
read cdds
echo
goto ${target}_stage3



:Debian-Live_stage3

echo ramdisk_size value is in kb
set kp ip=dhcp boot=live components splash fetch=${cdds}current-live/amd64/iso-hybrid/debian-live-11.1.0-amd64-xfce.iso
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name vmlinuz --timeout 100000 ${ds}vmlinuz${link} initrd=initrd.img ${kp}
initrd --name initrd.img --timeout 100000 ${ds}initrd.img${link}

boot
#################################################
:Snal

set ds1 ${sourceforge}snal/
set ds2 ${sourceforge1}snal/
set ds3 ${mirror0}snal/
set ds4 ${mirror1}snal/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:Snal_manual
set ds ${mirror0}snal/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Snal_stage2
iseq ${ds} ${sourceforge}snal/ && set link ?viasf=1 ||
set kp ip=dhcp archiso_http_srv=${ds}
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo


kernel --name vmlinuz-linux --timeout 100000 ${ds}arch/boot/x86_64/vmlinuz-linux${link} initrd=amd-ucode.img initrd=intel-ucode.img initrd=initramfs-linux.img ${kp} checksum
initrd --name initramfs-linux.img --timeout 100000 ${ds}arch/boot/x86_64/initramfs-linux.img${link}
initrd --name amd-ucode.img --timeout 100000 ${ds}arch/boot/amd-ucode.img${link}
initrd --name intel-ucode.img --timeout 100000 ${ds}arch/boot/intel-ucode.img${link}
boot

#################################################
:Reborn

set ds1 ${sourceforge}reborn/
set ds2 ${sourceforge1}reborn/
set ds3 ${mirror0}reborn/
set ds4 ${mirror1}reborn/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:Reborn_manual
set ds ${mirror0}reborn/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Reborn_stage2
iseq ${ds} ${sourceforge}reborn/ && set link ?viasf=1 ||
set kp ip=dhcp archiso_http_srv=${ds}
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name vmlinuz-linux --timeout 100000 ${ds}arch/boot/x86_64/vmlinuz-linux${link} initrd=amd-ucode.img initrd=intel-ucode.img initrd=archiso.img ${kp} checksum
initrd --name archiso.img --timeout 100000 ${ds}arch/boot/x86_64/archiso.img${link}
initrd --name amd-ucode.img --timeout 100000 ${ds}arch/boot/amd-ucode.img${link}
initrd --name intel-ucode.img --timeout 100000 ${ds}arch/boot/intel-ucode.img${link}
boot

#################################################
:Centosstream
set ds1 https://mirror.0xem.ma/stream/
set ds2 http://mirrors.tuna.tsinghua.edu.cn/centos-stream/
set ds3 http://mirror.stream.centos.org/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:Centosstream_manual
echo
set ds http://mirrors.tuna.tsinghua.edu.cn/centos-stream/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Centosstream_stage2
set version 9
echo -n Version: ${}
read version
echo

set kp inst.gpt quiet
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel ${ds}${version}-stream/BaseOS/x86_64/os/images/pxeboot/vmlinuz initrd=initrd.img inst.repo=${ds}${version}-stream/BaseOS/x86_64/os ${kp}
initrd ${ds}${version}-stream/BaseOS/x86_64/os/images/pxeboot/initrd.img
boot
#################################################
:UCS

set ds1 https://updates.software-univention.de

menu Sites boot ${target} from:
item 1 ${ds1}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2

:UCS_manual
echo
set ds https://updates.software-univention.de/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:UCS_stage2
set version 5.0-1
echo -n Univention Corporate Server installer Version (4.0-0 - 5.0-1): ${}
read version
echo

set interface gtk
echo -n Univention Corporate Server installer interface (tui, gtk): ${}
read interface
echo


echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

iseq ${interface} gtk && set link gtk/ || set link
set arch amd64


initrd ${ds}/pxe/${version}/${arch}/${link}/debian-installer/${arch}/initrd.gz
kernel ${ds}/pxe/${version}/${arch}/${link}/debian-installer/${arch}/linux initrd=initrd.gz ${kp}
boot

#################################################
:Rescuezilla
set ds1 ${sourceforge}rescuezilla/
set ds2 ${sourceforge1}rescuezilla/
set ds3 ${mirror0}rescuezilla/
set ds4 ${mirror1}rescuezilla/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:Rescuezilla_manual
set ds ${mirror0}rescuezilla/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Rescuezilla_stage2

echo Not support boot from https or iPXE injection boot, so set boot from ${mirror0}
iseq ${ds} ${sourceforge}rescuezilla/ && set ds ${sourceforge1}rescuezilla/ ||

echo ramdisk_size value is in kb
set kp boot=casper quiet splash fastboot fsck.mode=skip noprompt edd=on ip=dhcp url=${ds}rescuezilla.iso${link}
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name vmlinuz --timeout 100000 ${ds}casper/vmlinuz${link} initrd=initrd.lz ${kp}
initrd --name initrd.lz --timeout 100000 ${ds}casper/initrd.lz${link}

boot

#################################################
:ArchLabs

set ds1 ${sourceforge}archlabs/
set ds2 ${sourceforge1}archlabs/
set ds3 ${mirror0}archlabs/
set ds4 ${mirror1}archlabs/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:ArchLabs_manual
set ds ${mirror0}archlabs/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:ArchLabs_stage2
iseq ${ds} ${sourceforge}archlabs/ && set link ?viasf=1 ||
set kp ip=dhcp archiso_http_srv=${ds}
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo


kernel --name vmlinuz-linux --timeout 100000 ${ds}arch/boot/x86_64/vmlinuz-linux${link} initrd=amd-ucode.img initrd=intel-ucode.img initrd=initramfs-linux.img ${kp} checksum
initrd --name initramfs-linux.img --timeout 100000 ${ds}arch/boot/x86_64/initramfs-linux.img${link}
initrd --name amd-ucode.img --timeout 100000 ${ds}arch/boot/amd-ucode.img${link}
initrd --name intel-ucode.img --timeout 100000 ${ds}arch/boot/intel-ucode.img${link}
boot

#################################################
:ArchBang

set ds1 ${sourceforge}archbang/
set ds2 ${sourceforge1}archbang/
set ds3 ${mirror0}archbang/
set ds4 ${mirror1}archbang/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:ArchBang_manual
set ds ${mirror0}archbang/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:ArchBang_stage2
iseq ${ds} ${sourceforge}archbang/ && set link ?viasf=1 ||
set kp ip=dhcp archiso_http_srv=${ds}
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo


kernel --name vmlinuz-linux --timeout 100000 ${ds}arch/boot/x86_64/vmlinuz-linux${link} initrd=amd-ucode.img initrd=intel-ucode.img initrd=initramfs-linux.img ${kp} checksum
initrd --name initramfs-linux.img --timeout 100000 ${ds}arch/boot/x86_64/initramfs-linux.img${link}
initrd --name amd-ucode.img --timeout 100000 ${ds}arch/boot/amd-ucode.img${link}
initrd --name intel-ucode.img --timeout 100000 ${ds}arch/boot/intel-ucode.img${link}
boot

#################################################
:Plop

##https://www.plop.at/en/ploplinux/live/networkboot-linux.html
set ds1 ${sourceforge}plop/
set ds2 ${sourceforge1}plop/
set ds3 ${mirror0}plop/
set ds4 ${mirror1}plop/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:Plop_manual
set ds ${morror0}plop/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Plop_stage2
echo Not support boot from https, so Manual entry the Boot Server
iseq ${ds} ${sourceforge}plop/ && goto ${target}_manual ||


iseq ${ds} ${sourceforge}plop/ && set link ?viasf=1 ||
set kp vga=1 url=${ds}|/webfilelist-iso iso_filename=ploplinux.iso nomodeset
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo


kernel --name bzImage --timeout 100000 ${ds}syslinux/kernel/bzImage${link} initrd=initramfs.gz ${kp}
initrd --name initramfs.gz --timeout 100000 ${ds}syslinux/kernel/initramfs.gz${link}
boot

#################################################
:Slax

set ds1 ${sourceforge}slax/
set ds2 ${sourceforge1}slax/
set ds3 ${mirror0}slax/
set ds4 ${mirror1}slax/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:Slax_manual
set ds ${mirror0}slax/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Slax_stage2
iseq ${ds} ${sourceforge}slax/ && set link ?viasf=1 ||
set kp vga=normal load_ramdisk=1 prompt_ramdisk=0 rw printk.time=0 consoleblank=0 nocd nohd
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo

kernel --name vmlinuz --timeout 100000 ${ds}vmlinuz${link} initrd=initrfs.img slax.flags=toram ${kp} from=${ds}slax.iso
initrd --name initrfs.img --timeout 100000 ${ds}initrfs.img${link}
boot

#################################################
:Hyperbola

set ds1 ${sourceforge}hyperbola/
set ds2 ${sourceforge1}hyperbola/
set ds3 ${mirror0}hyperbola/
set ds4 ${mirror1}hyperbola/

menu Sites boot ${target} from:
item 1 ${ds1}
item 2 ${ds2}
item 3 ${ds3}
item 4 ${ds4}
item manual Manual Entry URL
choose siteno

iseq ${siteno} manual && goto ${target}_manual || set ds ${ds${siteno}} && goto ${target}_stage2


:Hyperbola_manual
set ds ${mirror0}hyperbola/
echo -n Manual Entry ${target} URL: ${}
read ds
echo
goto ${target}_stage2

:Hyperbola_stage2
iseq ${ds} ${sourceforge}hyperbola/ && set link ?viasf=1 ||
set kp ip=dhcp hyperisobasedir=hyperbola hyperiso_http_srv=${ds}
echo -n Kernel Parameter, Bootcode: ${}
read kp
echo


kernel --name vmlinuz --timeout 100000 ${ds}hyperbola/boot/x86_64/vmlinuz${link} initrd=initramfs-hyperiso.img ${kp} checksum
initrd --name initramfs-hyperiso.img --timeout 100000 ${ds}hyperbola/boot/x86_64/initramfs-hyperiso.img${link}
boot

#################################################
#################################################
#################################################
#################################################
:background

set pic https://github.com/hkkitlee/Ryanboot-offical-linux-netbooter/raw/main/logo.png
echo -n Picture URL (png): ${}
read pic
set x 1280
echo -n Length: ${}
read x
set y 800
echo -n Height: ${}
read y
console --picture ${pic} --x ${x} --y ${y}
goto start
#################################################
:colour
echo https://ipxe.org/cmd/cpair
echo

set fc 0
echo -n Foreground colour index: ${}
read fc

set bc 7
echo -n Background colour index: ${}
read bc

set pi 7
echo -n Pair index: ${}
read pi

cpair --foreground ${fc} --background ${bc} ${pi}

set leave y
echo -n Press enter to leave or N/n to do again:${}
read leave
echo
iseq ${answer} n && goto colour ||
iseq ${answer} N && goto colour ||
goto start
#################################################
:setting
config
goto start
#################################################
:xyz
chain --autofree http://boot.netboot.xyz
#################################################
:cl
set script 
echo Format:https://gitee.com/xxx  <---Enter your URL replace xxx
echo -n Command:chain --autofree --replace https://gitee.com/${}
read script
echo
chain --autofree --replace https://gitee.com/${script} || chain --autofree --replace https://github.com/hkkitlee/Ryanboot-offical-linux-netbooter/raw/main/oln.ipxe || chain --autofree --replace https://gitee.com/hkkitlee/Ryanboot-offical-linux-netbooter/raw/main/oln.ipxe
#################################################
:ryanboot
chain --autofree https://github.com/hkkitlee/Ryanboot/raw/main/chain.ipxe || chain --autofree https://gitee.com/hkkitlee/Ryanboot/raw/main/chain.ipxe || chain --autofree http://hkkitlee.ddns.net:8999/chain.ipxe || exit
